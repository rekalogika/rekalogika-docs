"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[6538],{3399:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var o=t(4848),a=t(8453);const r={title:"Manual Mapping using an Object Mapper"},p=void 0,c={id:"mapper/object-mapper",title:"Manual Mapping using an Object Mapper",description:"If you need a custom logic in an object to another object mapping, one way to do",source:"@site/docs/mapper/06-object-mapper.md",sourceDirName:"mapper",slug:"/mapper/object-mapper",permalink:"/mapper/object-mapper",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/mapper/06-object-mapper.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Manual Mapping using an Object Mapper"},sidebar:"docs",previous:{title:"Context and Mapping Options",permalink:"/mapper/context-options"},next:{title:"Manual Mapping using a Class Factory Method",permalink:"/mapper/class-factory-mapper"}},s={},i=[{value:"Extra Arguments",id:"extra-arguments",level:2},{value:"Using a Lazy-Loading Proxy",id:"using-a-lazy-loading-proxy",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["If you need a custom logic in an object to another object mapping, one way to do\nit is to create a service, and add the ",(0,o.jsx)(n.code,{children:"AsObjectMapper"})," attribute to a method."]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Brick\\Money\\Money;\nuse Rekalogika\\Mapper\\Attribute\\AsObjectMapper;\n\nclass MoneyObjectMapper\n{\n    #[AsObjectMapper]\n    public function mapMoneyToMoneyDto(Money $money): MoneyDto\n    {\n        return new MoneyDto(\n            $money->getAmount()->__toString(),\n            $money->getCurrency()->getCurrencyCode(),\n        );\n    }\n\n    #[AsObjectMapper]\n    public function mapMoneyDtoToMoney(MoneyDto $moneyDto): Money\n    {\n        return Money::of($moneyDto->getAmount(), $moneyDto->getCurrency());\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"extra-arguments",children:"Extra Arguments"}),"\n",(0,o.jsx)(n.p,{children:"You also have the option to inject the main transformer, sub-mapper, and the\ncontext to the property mapper. This can be in any order, but the first argument\nmust be the source object."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Brick\\Money\\Money;\nuse Rekalogika\\Mapper\\Attribute\\AsObjectMapper;\nuse Rekalogika\\Mapper\\Context\\Context;\nuse Rekalogika\\Mapper\\MainTransformerInterface;\nuse Rekalogika\\Mapper\\SubMapper\\SubMapperInterface;\n\nclass MoneyObjectMapper\n{\n    #[AsObjectMapper]\n    public function mapMoneyToMoneyDto(\n        Money $money,\n        // highlight-start\n        MainTransformerInterface $mainTransformer,\n        SubMapperInterface $subMapper,\n        Context $context\n        // highlight-end\n    ): MoneyDto {\n        return new MoneyDto(\n            $money->getAmount()->__toString(),\n            $money->getCurrency()->getCurrencyCode(),\n        );\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Read more about the sub mapper in the ",(0,o.jsx)(n.a,{href:"submapper",children:"SubMapper"})," chapter."]}),"\n",(0,o.jsx)(n.h2,{id:"using-a-lazy-loading-proxy",children:"Using a Lazy-Loading Proxy"}),"\n",(0,o.jsxs)(n.p,{children:["Instead of doing the mapping immediately, you can also use the ",(0,o.jsx)(n.code,{children:"createProxy()"}),"\nmethod to create a target proxy object. The mapping will be deferred to the\npoint when you first access the properties of the proxy object."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Brick\\Money\\Money;\nuse Rekalogika\\Mapper\\Attribute\\AsObjectMapper;\nuse Rekalogika\\Mapper\\Context\\Context;\nuse Rekalogika\\Mapper\\MainTransformerInterface;\nuse Rekalogika\\Mapper\\SubMapper\\SubMapperInterface;\n\nclass MoneyObjectMapper\n{\n    #[AsObjectMapper]\n    public function mapMoneyToMoneyDto(\n        Money $source,\n        SubMapperInterface $subMapper,\n    ): MoneyDto {\n        return $subMapper->createProxy(\n            MoneyDto::class,\n            static function (MoneyDto $target) use ($source) {\n                $target->__construct(\n                    $source->getAmount()->__toString(),\n                    $source->getCurrency()->getCurrencyCode(),\n                );\n            },\n        );\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Read more about the ",(0,o.jsx)(n.code,{children:"createProxy()"})," method in the ",(0,o.jsx)(n.a,{href:"submapper#createproxy-method",children:"SubMapper"}),"\nchapter."]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>p,x:()=>c});var o=t(6540);const a={},r=o.createContext(a);function p(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:p(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);