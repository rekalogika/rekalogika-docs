"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[7472],{1368:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"file-bundle/filtering","title":"Filtering","description":"In this framework, \'filtering\' is the opportunistic creation & caching of","source":"@site/docs/file-bundle/08-filtering.md","sourceDirName":"file-bundle","slug":"/file-bundle/filtering","permalink":"/file-bundle/filtering","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file-bundle/08-filtering.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Filtering"},"sidebar":"docs","previous":{"title":"Serving Files","permalink":"/file-bundle/serving-files"},"next":{"title":"Translation","permalink":"/file-bundle/translation"}}');var t=n(4848),l=n(8453);const s={title:"Filtering"},a=void 0,o={},d=[{value:"<code>ImageResizer</code>",id:"imageresizer",level:2},{value:"PHP Usage",id:"php-usage",level:3},{value:"Twig Usage",id:"twig-usage",level:3}];function c(e){const i={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["In this framework, 'filtering' is the opportunistic creation & caching of\nderived files from a source file. If a filter is applied to a ",(0,t.jsx)(i.code,{children:"FileInterface"}),",\none of these things happens:"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"If the derived file does not exist, process the source and create the\nderived file, then save it."}),"\n",(0,t.jsx)(i.li,{children:"If the derived file exists and newer than the source file, return the\nexisting derived file."}),"\n",(0,t.jsx)(i.li,{children:"If the derived file exists and older than the source file, then it is stale,\nthe filter will create a derivation out of the source file, then overwrite\nthe old derived file."}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Currently, there is only one filter available, ",(0,t.jsx)(i.code,{children:"ImageResizer"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"imageresizer",children:(0,t.jsx)(i.code,{children:"ImageResizer"})}),"\n",(0,t.jsxs)(i.admonition,{title:"Preparation",type:"info",children:[(0,t.jsxs)(i.p,{children:["You need to install the package ",(0,t.jsx)(i.code,{children:"rekalogika/file-image"})," to use this feature:"]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"composer require rekalogika/file-image\n"})})]}),"\n",(0,t.jsx)(i.h3,{id:"php-usage",children:"PHP Usage"}),"\n",(0,t.jsxs)(i.p,{children:["In PHP files, you need to inject the ",(0,t.jsx)(i.code,{children:"ImageResizer"})," class to your service\nor controller:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-php",children:"use Rekalogika\\File\\Image\\ImageResizer;\nuse Rekalogika\\Contracts\\File\\FileInterface;\n\n/** @var ImageResizer $imageResizer */\n/** @var FileInterface $image */\n\n$resizedImage = $imageResizer\n    ->take($image)\n    ->resize(100, ImageResizer::ASPECRATIO_SQUARE)\n    ->getResult();\n"})}),"\n",(0,t.jsx)(i.p,{children:"The first time it is called, the filter will create a 100-pixel-square-cropped\nimage from the original image. The second time it is called, the filter will\nreturn the already created derived image."}),"\n",(0,t.jsx)(i.p,{children:"If the original image is updated, the filter will create a new derived image and\noverwrite the old one."}),"\n",(0,t.jsx)(i.h3,{id:"twig-usage",children:"Twig Usage"}),"\n",(0,t.jsxs)(i.p,{children:["In Twig templates, you can use the ",(0,t.jsx)(i.code,{children:"image_resize"})," filter. For example:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-twig",children:"<img src=\"{{ image_file|image_resize(100, 'square')|temporary_url }}\" />\n"})}),"\n",(0,t.jsxs)(i.p,{children:["The example above will give us a temporary URL to a square-cropped image with a\nmaximum width or height of 100 pixels from the original image\n",(0,t.jsx)(i.code,{children:"image_file"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var r=n(6540);const t={},l=r.createContext(t);function s(e){const i=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);