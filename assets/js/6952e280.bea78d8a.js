"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[5900],{3373:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"analytics/value-resolver/custom-dql-value-resolver","title":"Custom DQL Value Resolver","description":"The CustomDQLValueResolver allows you to define a custom DQL expression to get","source":"@site/docs/analytics/05-value-resolver/02-custom-dql-value-resolver.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/custom-dql-value-resolver","permalink":"/analytics/value-resolver/custom-dql-value-resolver","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/02-custom-dql-value-resolver.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Custom DQL Value Resolver"},"sidebar":"docs","previous":{"title":"Basic Value Resolvers","permalink":"/analytics/value-resolver/basic-value-resolvers"},"next":{"title":"Property Path","permalink":"/analytics/value-resolver/property-path"}}');var r=t(4848),l=t(8453);const o={title:"Custom DQL Value Resolver"},a=void 0,i={},c=[];function u(e){const s={a:"a",code:"code",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"CustomDQLValueResolver"})," allows you to define a custom DQL expression to get\nthe value from the source entity. This is useful when you need to perform complex\ncalculations to get the value."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\CustomDQLValueResolver;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(enumType: Gender::class, nullable: true)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new CustomDQLValueResolver(\"\n            CASE\n                WHEN [customer.*] INSTANCE OF Rekalogika\\Analytics\\Tests\\App\\Entity\\IndividualCustomer\n                THEN [customer(Rekalogika\\Analytics\\Tests\\App\\Entity\\IndividualCustomer).gender]\n\n                ELSE NULLIF('a','a')\n            END\n        \"),\n        // highlight-end\n    )]\n    private ?Gender $customerGender = null;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["With the above code, if the ",(0,r.jsx)(s.code,{children:"customer"})," is an ",(0,r.jsx)(s.code,{children:"IndividualCustomer"}),", it will record\ntheir gender. Otherwise, gender is not applicable, and we set it to null."]}),"\n",(0,r.jsxs)(s.p,{children:["The expressions enclosed in square brackets ",(0,r.jsx)(s.code,{children:"[...]"})," are ",(0,r.jsx)(s.a,{href:"./property-path",children:"property\npaths"}),", and will be replaced by the real DQL expression."]})]})}function d(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const r={},l=n.createContext(r);function o(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);