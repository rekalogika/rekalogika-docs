"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[1099],{7204:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"collections/implementations/query-collection","title":"Query-Backed Collection","description":"A collection class using Doctrine ORM QueryBuilder as the data source. Unlike","source":"@site/docs/collections/02-implementations/02-query-collection.md","sourceDirName":"collections/02-implementations","slug":"/collections/implementations/query-collection","permalink":"/collections/implementations/query-collection","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/02-implementations/02-query-collection.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Query-Backed Collection"},"sidebar":"docs","previous":{"title":"Collection Decorators","permalink":"/collections/implementations/decorators"},"next":{"title":"Repository","permalink":"/collections/implementations/repository"}}');var i=l(4848),t=l(8453);const c={title:"Query-Backed Collection"},r=void 0,s={},a=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"The Minimal Flavor",id:"the-minimal-flavor",level:2},{value:"Extending <code>QueryRecollection</code>",id:"extending-queryrecollection",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["A collection class using Doctrine ORM ",(0,i.jsx)(n.code,{children:"QueryBuilder"})," as the data source. Unlike\ndoing the query in the traditional way, this class allows lazy loading. You can\nsafely pass the object around, and it will only execute the query when you start\ngetting items from it."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"composer require rekalogika/collections-orm\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Collections\\ORM\\QueryRecollection;\n\n$queryBuilder = ... // create a QueryBuilder instance\n\n$collection = new QueryRecollection(\n    queryBuilder: $queryBuilder,\n    indexBy: 'id'\n);\n\n// use $collection like a regular Collection or Recollection\n"})}),"\n",(0,i.jsx)(n.h2,{id:"the-minimal-flavor",children:"The Minimal Flavor"}),"\n",(0,i.jsxs)(n.p,{children:["The minimal version of ",(0,i.jsx)(n.code,{children:"QueryRecollection"})," is ",(0,i.jsx)(n.code,{children:"QueryPageable"}),", which implements\n",(0,i.jsx)(n.code,{children:"PageableRecollection"}),". Simply replace ",(0,i.jsx)(n.code,{children:"QueryRecollection"})," with ",(0,i.jsx)(n.code,{children:"QueryPageable"})," in\nthe example above."]}),"\n",(0,i.jsxs)(n.h2,{id:"extending-queryrecollection",children:["Extending ",(0,i.jsx)(n.code,{children:"QueryRecollection"})]}),"\n",(0,i.jsx)(n.p,{children:"TBD"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>r});var o=l(6540);const i={},t=o.createContext(i);function c(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);