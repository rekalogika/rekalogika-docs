"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[6182],{1798:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var t=l(5893),i=l(1151),a=l(4866),r=l(5162);const o={title:"File Uploads Using FilePond"},s=void 0,d={id:"file-bundle/file-upload-filepond",title:"File Uploads Using FilePond",description:"This chapter describes how to easily create a form for uploading files.",source:"@site/docs/file-bundle/05-file-upload-filepond.md",sourceDirName:"file-bundle",slug:"/file-bundle/file-upload-filepond",permalink:"/file-bundle/file-upload-filepond",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file-bundle/05-file-upload-filepond.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"File Uploads Using FilePond"},sidebar:"docs",previous:{title:"Working With Entities & Files",permalink:"/file-bundle/working-with-entities"},next:{title:"Integration With Symfony Components",permalink:"/file-bundle/symfony"}},c={},u=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage for a Single File Property",id:"usage-for-a-single-file-property",level:2},{value:"Usage for a Collection of Files",id:"usage-for-a-collection-of-files",level:2},{value:"Specifying Options",id:"specifying-options",level:2},{value:"Caveats and Limitations",id:"caveats-and-limitations",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This chapter describes how to easily create a form for uploading files."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.a,{href:"https://pqina.nl/filepond/",children:"FilePond"})," in the frontend, and ",(0,t.jsx)(n.a,{href:"https://symfony.com/doc/current/forms.html",children:"Symfony\nForm"})," in the backend."]}),"\n",(0,t.jsxs)(n.li,{children:["DX improvement. Simply add a field to your form using ",(0,t.jsx)(n.code,{children:"FilePondType"})," or\n",(0,t.jsx)(n.code,{children:"FilePondCollectionType"})," and you get file upload, image preview, file removal,\nand all the other features."]}),"\n",(0,t.jsx)(n.li,{children:"To upload, users can browse the files, use drag and drop, or copy & paste\nthem."}),"\n",(0,t.jsx)(n.li,{children:"Looks nice out of the box."}),"\n",(0,t.jsx)(n.li,{children:"No need to write any JavaScript code. Options are supplied using HTML\nattributes."}),"\n",(0,t.jsx)(n.li,{children:"Upload files along with the other properties of your entity, no need to create\na separate form, controller, or logic just for uploading files and removing\nthem."}),"\n",(0,t.jsx)(n.li,{children:"Localization support. Automatically detects the user's locale and displays\nmessages in the correct language."}),"\n",(0,t.jsx)(n.li,{children:"Image preview of uploaded files & images. Also shows the preview for\npreviously uploaded files when editing an entity."}),"\n",(0,t.jsx)(n.li,{children:"To delete the file, users can use the remove button on the preview and submit the form."}),"\n",(0,t.jsx)(n.li,{children:"Ships with the kitchen sink. Includes all the plugins that can be configured\nwithout Javascript, and all the available locales."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"Preinstallation checklists:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Make sure Composer is installed globally, as explained in the ",(0,t.jsx)(n.a,{href:"https://getcomposer.org/doc/00-intro.md",children:"installation\nchapter"})," of the Composer documentation."]}),"\n",(0,t.jsxs)(n.li,{children:["Make sure you have\n",(0,t.jsx)(n.a,{href:"https://symfony.com/bundles/StimulusBundle/current/index.html",children:"StimulusBundle"}),"\nconfigured in your app."]}),"\n",(0,t.jsx)(n.li,{children:"Make sure your project has Symfony Flex installed and enabled (it is enabled\nby default)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Open a command console, enter your project directory, and execute:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"composer require rekalogika/file-filepond\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you're using WebpackEncore, install your assets and restart Encore (not\nneeded if you're using AssetMapper):"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(r.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn install --force\nyarn watch\n"})})}),(0,t.jsx)(r.Z,{value:"npm",label:"NPM",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install --force\nnpm run watch\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"usage-for-a-single-file-property",children:"Usage for a Single File Property"}),"\n",(0,t.jsxs)(n.p,{children:["Simply add your field to your form, using the form type ",(0,t.jsx)(n.code,{children:"FilePondType"}),". Example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\File\\Bridge\\FilePond\\FilePondType;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\n\nclass MyFormType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder\n            // ...\n            ->add('image', FilePondType::class, [\n                'label' => 'Product Image',\n                'required' => false,\n                'attr' => [\n                    'accept' => 'image/png, image/jpeg'\n                ],\n                'allow_delete' => true,\n            ])\n        ;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"allow_delete"})," is true, then the file will be removed on form submission if\nthe user removes the file using the remove button on the preview."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-for-a-collection-of-files",children:"Usage for a Collection of Files"}),"\n",(0,t.jsxs)(n.p,{children:["First, you need to set up the relation in your entity like what is described in\n",(0,t.jsx)(n.a,{href:"collection",children:"Implementing a Collection of Files"}),". Then you can use\n",(0,t.jsx)(n.code,{children:"FilePondCollectionType"}),". Example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\File\\Bridge\\FilePond\\FilePondCollectionType;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\n\nclass MyFormType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder\n            // ...\n            ->add('images', FilePondCollectionType::class, [\n                'label' => 'Product Images',\n                'required' => false,\n                'attr' => [\n                    'accept' => 'image/png, image/jpeg'\n                ],\n                'allow_delete' => true,\n            ]);\n        ;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"allow_delete"})," is true, then the file will be removed on form submission if\nthe user removes the file using the remove button on the preview."]}),"\n",(0,t.jsx)(n.h2,{id:"specifying-options",children:"Specifying Options"}),"\n",(0,t.jsxs)(n.p,{children:["You can specify FilePond options using the ",(0,t.jsx)(n.code,{children:"attr"})," option of the form field. The\nexample below will disable replacing files."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"    ->add('image', FilePondType::class, [\n        'attr' => [\n            'data-allow-replace' => 'false'\n        ],\n    ])\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The list of available options can be found in the ",(0,t.jsx)(n.a,{href:"https://pqina.nl/filepond/docs/api/instance/properties/",children:"FilePond\nproperties"}),"\ndocumentation."]}),"\n",(0,t.jsxs)(n.p,{children:["To specify the option, you need to convert from camelCase to kebab-case, and\nprefix the property name with ",(0,t.jsx)(n.code,{children:"data-"}),". For example, the property ",(0,t.jsx)(n.code,{children:"allowReplace"}),"\nbecomes ",(0,t.jsx)(n.code,{children:"data-allow-replace"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["We also use several plugins that add additional options. You can read the\n",(0,t.jsx)(n.a,{href:"https://pqina.nl/filepond/docs/api/plugins/",children:"documentation of each of the\nplugins"})," to see what options are\navailable."]}),"\n",(0,t.jsx)(n.p,{children:"This is the list of the enabled plugins:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"File Encode"}),"\n",(0,t.jsx)(n.li,{children:"File Metadata"}),"\n",(0,t.jsx)(n.li,{children:"File Poster"}),"\n",(0,t.jsx)(n.li,{children:"File ValidateSize"}),"\n",(0,t.jsx)(n.li,{children:"File ValidateType"}),"\n",(0,t.jsx)(n.li,{children:"Image Crop"}),"\n",(0,t.jsx)(n.li,{children:"Image Edit"}),"\n",(0,t.jsx)(n.li,{children:"Image ExifOrientation"}),"\n",(0,t.jsx)(n.li,{children:"Image Preview"}),"\n",(0,t.jsx)(n.li,{children:"Image Resize"}),"\n",(0,t.jsx)(n.li,{children:"Image Transform"}),"\n",(0,t.jsx)(n.li,{children:"Image ValidateSize"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"caveats-and-limitations",children:"Caveats and Limitations"}),"\n",(0,t.jsxs)(n.p,{children:["Due to a ",(0,t.jsx)(n.a,{href:"https://github.com/pqina/filepond/pull/941",children:"FilePond bug"}),",\n",(0,t.jsx)(n.code,{children:"FilePondCollectionType"})," uses the ",(0,t.jsx)(n.a,{href:"https://pqina.nl/filepond/docs/api/plugins/file-encode/",children:"file encode\nplugin"})," to upload the\nfiles. It works by encoding the files as Base64 strings, and then sending them\nto the server. It means the files will be about 33% larger on the wire, it might\nalso trigger application based firewalls that limit the size of the request\nbody, and it might exhaust the browser's or the server's memory if the files are\ntoo large."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"FilePondType"})," is also affected by the bug. But we can afford to tolerate it as\nthe bug does not appear to affect its function, except that we will get an error\nin the console every time a file is added to the field."]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:(e,n,l)=>{l.d(n,{Z:()=>r});l(7294);var t=l(6905);const i={tabItem:"tabItem_Ymn6"};var a=l(5893);function r(e){let{children:n,hidden:l,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.Z)(i.tabItem,r),hidden:l,children:n})}},4866:(e,n,l)=>{l.d(n,{Z:()=>w});var t=l(7294),i=l(6905),a=l(2466),r=l(6550),o=l(469),s=l(1980),d=l(7392),c=l(812);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:l}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:l,attributes:t,default:i}}=e;return{value:n,label:l,attributes:t,default:i}}))}(l);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,l])}function p(e){let{value:n,tabValues:l}=e;return l.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:l}=e;const i=(0,r.k6)(),a=function(e){let{queryString:n=!1,groupId:l}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:n,groupId:l});return[(0,s._X)(a),(0,t.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function m(e){const{defaultValue:n,queryString:l=!1,groupId:i}=e,a=h(e),[r,s]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=l.find((e=>e.default))??l[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[d,u]=f({queryString:l,groupId:i}),[m,g]=function(e){let{groupId:n}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,c.Nk)(l);return[i,(0,t.useCallback)((e=>{l&&a.set(e)}),[l,a])]}({groupId:i}),b=(()=>{const e=d??m;return p({value:e,tabValues:a})?e:null})();(0,o.Z)((()=>{b&&s(b)}),[b]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,a]),tabValues:a}}var g=l(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=l(5893);function y(e){let{className:n,block:l,selectedValue:t,selectValue:r,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),c=e=>{const n=e.currentTarget,l=s.indexOf(n),i=o[l].value;i!==t&&(d(n),r(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const l=s.indexOf(e.currentTarget)+1;n=s[l]??s[0];break}case"ArrowLeft":{const l=s.indexOf(e.currentTarget)-1;n=s[l]??s[s.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},n),children:o.map((e=>{let{value:n,label:l,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>s.push(e),onKeyDown:u,onClick:c,...a,className:(0,i.Z)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":t===n}),children:l??n},n)}))})}function j(e){let{lazy:n,children:l,selectedValue:i}=e;const a=(Array.isArray(l)?l:[l]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,i.Z)("tabs-container",b.tabList),children:[(0,x.jsx)(y,{...n,...e}),(0,x.jsx)(j,{...n,...e})]})}function w(e){const n=(0,g.Z)();return(0,x.jsx)(v,{...e,children:u(e.children)},String(n))}},1151:(e,n,l)=>{l.d(n,{Z:()=>o,a:()=>r});var t=l(7294);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);