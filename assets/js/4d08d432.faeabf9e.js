"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[2130],{3701:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=t(5893),o=t(1151);const l={title:"Lazy-Loading Proxy"},r=void 0,a={id:"file/proxy",title:"Lazy-Loading Proxy",description:"This chapter describes how to lazy-load a file.",source:"@site/docs/file/07-proxy.md",sourceDirName:"file",slug:"/file/proxy",permalink:"/file/proxy",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file/07-proxy.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Lazy-Loading Proxy"},sidebar:"docs",previous:{title:"Derivation",permalink:"/file/derivation"},next:{title:"Null File",permalink:"/file/null-file"}},s={},c=[{value:"Getting a Proxy to a File",id:"getting-a-proxy-to-a-file",level:2},{value:"Getting The Real File from a Proxy",id:"getting-the-real-file-from-a-proxy",level:2}];function d(e){const i={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"This chapter describes how to lazy-load a file."}),"\n",(0,n.jsx)(i.h2,{id:"getting-a-proxy-to-a-file",children:"Getting a Proxy to a File"}),"\n",(0,n.jsxs)(i.p,{children:["To get a lazy-loading proxy to a real file, you can use the method ",(0,n.jsx)(i.code,{children:"getReference()"})," of ",(0,n.jsx)(i.code,{children:"FileRepositoryInterface"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-php",children:"use Rekalogika\\Contracts\\File\\FileRepositoryInterface;\nuse Rekalogika\\File\\FilePointer;\n\n/** @var FileRepositoryInterface $fileRepository */\n\n$pointer = new FilePointer('default', 'key');\n\n$file = $fileRepository->getReference($pointer);\n"})}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"$file"})," variable will contain a ",(0,n.jsx)(i.code,{children:"FileInterface"})," object that is actually a\nproxy to the real thing. It behaves the same way as a real ",(0,n.jsx)(i.code,{children:"FileInterface"}),"\nobject, except that it will throw ",(0,n.jsx)(i.code,{children:"FileNotFoundException"})," if the file is not\nfound when you are trying to use it."]}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsxs)(i.p,{children:["If the file is already in the cache of the ",(0,n.jsx)(i.code,{children:"FileRepositoryInterface"}),", then the\nreal file will be returned instead of a proxy."]})}),"\n",(0,n.jsx)(i.h2,{id:"getting-the-real-file-from-a-proxy",children:"Getting The Real File from a Proxy"}),"\n",(0,n.jsxs)(i.p,{children:["To get the real file from a proxy, you can call the static method\n",(0,n.jsx)(i.code,{children:"FileProxy::getFile()"}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-php",children:"use Rekalogika\\Contracts\\File\\FileInterface;\nuse Rekalogika\\Contracts\\File\\FileProxy;\n\n/** @var FileInterface $file */\n\n// $realFile will be a FileInterface object or null if it does not exist\n$realFile = FileProxy::getFile($file);\n"})}),"\n",(0,n.jsx)(i.admonition,{title:"Protip",type:"tip",children:(0,n.jsxs)(i.p,{children:["You can pass any ",(0,n.jsx)(i.code,{children:"FileInterface"})," to ",(0,n.jsx)(i.code,{children:"FileProxy::getFile()"}),". If the file is not\na proxy, it will be returned as is."]})})]})}function h(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>r});var n=t(7294);const o={},l=n.createContext(o);function r(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);