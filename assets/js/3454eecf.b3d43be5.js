"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[2500],{7370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"analytics/value-resolver/property-path","title":"Property Path","description":"Some ValueResolvers accept property path as their argument. This allows you to","source":"@site/docs/analytics/05-value-resolver/05-property-path.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/property-path","permalink":"/analytics/value-resolver/property-path","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/05-property-path.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Property Path"},"sidebar":"docs","previous":{"title":"Custom Expression","permalink":"/analytics/value-resolver/custom-expression"},"next":{"title":"Creating Value Resolvers","permalink":"/analytics/value-resolver/creating-value-resolvers"}}');var r=n(4848),a=n(8453);const i={title:"Property Path"},o=void 0,l={},c=[{value:"Example of Using a Property Path in a Dimension",id:"example-of-using-a-property-path-in-a-dimension",level:2},{value:"Resolve to a Property",id:"resolve-to-a-property",level:2},{value:"Resolve to the Identifier of the Current Entity",id:"resolve-to-the-identifier-of-the-current-entity",level:2},{value:"Getting the Alias of a Related Entity",id:"getting-the-alias-of-a-related-entity",level:2},{value:"Casting to a Class",id:"casting-to-a-class",level:2}];function d(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Some ",(0,r.jsx)(t.code,{children:"ValueResolver"}),"s accept property path as their argument. This allows you to\nspecify a path to a specific property from the root entity, traversing through\nrelated entities. The framework will automatically make the necessary joins\nbehind the scenes."]}),"\n",(0,r.jsx)(t.h2,{id:"example-of-using-a-property-path-in-a-dimension",children:"Example of Using a Property Path in a Dimension"}),"\n",(0,r.jsx)(t.p,{children:"This is how you can use a property path in a dimension:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(type: Types::STRING)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new PropertyValue('customer.country.name'),\n        // highlight-end\n    )]\n    private ?string $countryName = null;\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["In this example, from the root ",(0,r.jsx)(t.code,{children:"Order"})," object, we traverse the ",(0,r.jsx)(t.code,{children:"customer"}),"\nrelation, and then the ",(0,r.jsx)(t.code,{children:"country"})," relation to get the ",(0,r.jsx)(t.code,{children:"name"})," property."]}),"\n",(0,r.jsxs)(t.p,{children:["In the following sections, we will only include how to use property paths in\n",(0,r.jsx)(t.code,{children:"ValueResolver"})," objects, omitting the rest of the code for brevity."]}),"\n",(0,r.jsx)(t.h2,{id:"resolve-to-a-property",children:"Resolve to a Property"}),"\n",(0,r.jsx)(t.p,{children:"The most common usage is to resolve to a property:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\n$valueResolver = new PropertyValue('customer.country.name');\n"})}),"\n",(0,r.jsx)(t.h2,{id:"resolve-to-the-identifier-of-the-current-entity",children:"Resolve to the Identifier of the Current Entity"}),"\n",(0,r.jsxs)(t.p,{children:["You can resolve to the identifier of the current entity using the special ",(0,r.jsx)(t.code,{children:"__id"}),"\nproperty:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\n// This will resolve to the identifier of the root entity\n$valueResolver = new PropertyValue('__id');\n\n// This will resolve to the identifier of the customer entity, e.g. Customer.id\n$valueResolver = new PropertyValue('customer.__id');\n"})}),"\n",(0,r.jsx)(t.h2,{id:"getting-the-alias-of-a-related-entity",children:"Getting the Alias of a Related Entity"}),"\n",(0,r.jsxs)(t.p,{children:["Some DQL clauses expect the alias of a related entity to be passed as an\nargument, including the ",(0,r.jsx)(t.code,{children:"INSTANCE OF"})," clause. You can use the ",(0,r.jsx)(t.code,{children:"*"})," symbol to get\nthe alias of a related entity:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Core\\ValueResolver\\CustomExpression;\n\n$valueResolver = new CustomExpression(\"\n    CASE\n        // highlight-start\n        WHEN [customer.*] INSTANCE OF App\\Entity\\IndividualCustomer\n        // highlight-end\n        THEN [customer(App\\Entity\\IndividualCustomer).gender]\n\n        ELSE NULLIF('a','a')\n    END\n\");\n"})}),"\n",(0,r.jsx)(t.h2,{id:"casting-to-a-class",children:"Casting to a Class"}),"\n",(0,r.jsxs)(t.p,{children:["It is possible to cast a related entity to a specific class using parentheses.\nThis is useful if you need to access a property that is not defined in the root\nentity. This is an advanced feature, and probably only makes sense if you are\nusing ",(0,r.jsx)(t.code,{children:"CustomExpression"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Core\\ValueResolver\\CustomExpression;\n\n$valueResolver = new CustomExpression(\"\n    CASE\n        WHEN [customer.*] INSTANCE OF App\\Entity\\IndividualCustomer\n        // highlight-start\n        THEN [customer(App\\Entity\\IndividualCustomer).gender]\n        // highlight-end\n\n        ELSE NULLIF('a','a')\n    END\n\");\n"})}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsxs)(t.p,{children:["To implement the class casting, the framework will create an additional join\nusing the ",(0,r.jsx)(t.code,{children:"WITH"})," clause:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"use Doctrine\\ORM\\QueryBuilder;\n\n/** @var QueryBuilder $queryBuilder */\n\n$queryBuilder\n    ->from(Order::class, '_a0')\n    ->leftJoin('_a0.customer', '_a1') // Customer::class\n    // highlight-start\n    ->leftJoin(\n        IndividualCustomer::class,\n        '_a2',\n        'WITH',\n        '_a2.id = _a1.id',\n    );\n    // highlight-end\n"})})]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);