"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4365],{6143:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"analytics/aggregate-function/standard-deviation","title":"Standard Deviation","description":"StdDev is an aggregate function that calculates the standard deviation of a","source":"@site/docs/analytics/06-aggregate-function/04-standard-deviation.md","sourceDirName":"analytics/06-aggregate-function","slug":"/analytics/aggregate-function/standard-deviation","permalink":"/analytics/aggregate-function/standard-deviation","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/06-aggregate-function/04-standard-deviation.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Standard Deviation"},"sidebar":"docs","previous":{"title":"Count Distinct","permalink":"/analytics/aggregate-function/count-distinct"},"next":{"title":"Internals","permalink":"/analytics/internals/"}}');var i=t(4848),s=t(8453);const r={title:"Standard Deviation"},o=void 0,c={},u=[{value:"Example",id:"example",level:2},{value:"<code>SumSquare</code> Function",id:"sumsquare-function",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"StdDev"})," is an aggregate function that calculates the standard deviation of a\nspecified property. It requires these other measures to be defined on the\nproperty:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Sum"})," - to calculate the sum of the property values."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Count"})," - to count the number of values."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SumSquare"})," - to calculate the sum of the squares of the property values."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"StdDev"})," is a virtual measure and does not store its value in the database."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\AggregateFunction\\Count;\nuse Rekalogika\\Analytics\\AggregateFunction\\StdDev;\nuse Rekalogika\\Analytics\\AggregateFunction\\Sum;\nuse Rekalogika\\Analytics\\AggregateFunction\\SumSquare;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\EntityValueResolver;\n\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(type: Types::INTEGER)]\n    #[Analytics\\Measure(\n        function: new Sum('item.price'),\n    )]\n    private ?int $price = null;\n\n    #[ORM\\Column(type: Types::FLOAT)]\n    #[Analytics\\Measure(\n        function: new SumSquare('item.price'),\n        hidden: true,\n    )]\n    private ?float $priceSumSquare = null;\n\n    #[ORM\\Column(type: Types::INTEGER)]\n    #[Analytics\\Measure(\n        function: new Count('id'),\n    )]\n    private ?int $count = null;\n\n    #[Analytics\\Measure(\n        // highlight-start\n        function: new StdDev(\n            sumSquareProperty: 'priceSumSquare',\n            countProperty: 'count',\n            sumProperty: 'price',\n        ),\n        // highlight-end\n    )]\n    private ?int $priceStdDev = null;\n}\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["It is not necessary to store the standard deviation value in the database, and\ntherefore the property does not need the ",(0,i.jsx)(n.code,{children:"ORM\\Column"})," attribute."]})}),"\n",(0,i.jsxs)(n.h2,{id:"sumsquare-function",children:[(0,i.jsx)(n.code,{children:"SumSquare"})," Function"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"SumSquare"})," function is used to calculate the sum of the squares of the\nspecified property values. It is a building block for many statistical\nfunctions, including ",(0,i.jsx)(n.code,{children:"StdDev"}),". However, the end users are probably not\ninterested in the result of the ",(0,i.jsx)(n.code,{children:"SumSquare"})," function itself, and you can hide it\nfrom UI by using the ",(0,i.jsx)(n.code,{children:"hidden"})," parameter in the ",(0,i.jsx)(n.code,{children:"Measure"})," attribute like in the\nexample above."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);