"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[5399],{6182:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/cube.light-cd2e1da0854f17fb6f92b32976880266.svg"},7561:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"analytics/query/cube-result","title":"Data Cube Result","description":"To get the result in the data cube format, call the getCube() method on the","source":"@site/docs/analytics/04-query/02-cube-result.md","sourceDirName":"analytics/04-query","slug":"/analytics/query/cube-result","permalink":"/analytics/query/cube-result","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/04-query/02-cube-result.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Data Cube Result"},"sidebar":"docs","previous":{"title":"Querying","permalink":"/analytics/query/querying"},"next":{"title":"Table Result","permalink":"/analytics/query/table-result"}}');var l=t(4848),r=t(8453);const c={title:"Data Cube Result"},a=void 0,i={},o=[{value:"Class Diagram",id:"class-diagram",level:2},{value:"Definition",id:"definition",level:2},{value:"Example Query",id:"example-query",level:2},{value:"<code>drillDown()</code> method",id:"drilldown-method",level:2},{value:"<code>rollUp()</code> method",id:"rollup-method",level:2},{value:"<code>slice()</code> method",id:"slice-method",level:2}];function d(e){const n={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["To get the result in the data cube format, call the ",(0,l.jsx)(n.code,{children:"getCube()"})," method on the\n",(0,l.jsx)(n.code,{children:"Result"})," object. It returns the apex ",(0,l.jsx)(n.code,{children:"CubeCell"})," that has no dimension, and thus\nrepresents the entire data cube."]}),"\n",(0,l.jsxs)(n.p,{children:["A ",(0,l.jsx)(n.code,{children:"CubeCell"})," represents a single cell in the data cube. Each cell contains a\ntuple of dimensions and measures. You can drill down from a cube cell into\na more specific cube by calling the ",(0,l.jsx)(n.code,{children:"drillDown()"})," or ",(0,l.jsx)(n.code,{children:"slice()"})," method."]}),"\n",(0,l.jsx)(n.p,{children:":::"}),"\n",(0,l.jsx)(n.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{alt:"Data cube result class diagram",src:t(6182).A+"#light",width:"553",height:"738"}),"\n",(0,l.jsx)(n.img,{alt:"Data cube result class diagram",src:t(7846).A+"#dark",width:"553",height:"738"})]}),"\n",(0,l.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,l.jsxs)(n.p,{children:["A ",(0,l.jsx)(n.code,{children:"CubeCell"})," contains a tuple and measures. A tuple is a collection of\ndimensions, each of which is a property of the summary entity. Measures are\nthe properties that represent the aggregated values, such as ",(0,l.jsx)(n.code,{children:"count"}),", ",(0,l.jsx)(n.code,{children:"price"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Example: A ",(0,l.jsx)(n.code,{children:"CubeCell"})," can contain a tuple with dimensions like ",(0,l.jsx)(n.code,{children:"time.year"})," =\n",(0,l.jsx)(n.code,{children:"2023"}),", ",(0,l.jsx)(n.code,{children:"customerCountry"})," = ",(0,l.jsx)(n.code,{children:"DE"}),", and ",(0,l.jsx)(n.code,{children:"itemCategory"})," = ",(0,l.jsx)(n.code,{children:"electronics"}),". In such a\n",(0,l.jsx)(n.code,{children:"CubeCell"}),", the measures might include ",(0,l.jsx)(n.code,{children:"count"})," = ",(0,l.jsx)(n.code,{children:"20"})," and ",(0,l.jsx)(n.code,{children:"price"})," = ",(0,l.jsx)(n.code,{children:"1000.00"}),".\nIt means that in the year 2023, there were 20 orders from Germany in the\nelectronics category, with a total price of 1000.00."]}),"\n",(0,l.jsx)(n.h2,{id:"example-query",children:"Example Query"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Doctrine\\Common\\Collections\\Criteria;\nuse Rekalogika\\Analytics\\Contracts\\SummaryManager;\n\n/** @var SummaryManager $summaryManager */\n\n$apexCube = $summaryManager\n    ->createQuery()\n    ->from(OrderSummary::class) // the summary entity class name\n    ->groupBy('time.year', 'customerCountry', 'itemCategory') // dimensions\n    ->select('price', 'count') // measures\n    ->getResult()\n    ->getCube();\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"drilldown-method",children:[(0,l.jsx)(n.code,{children:"drillDown()"})," method"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"drillDown()"})," method allows you to drill down into a specific dimension. It\nreturns the ",(0,l.jsx)(n.code,{children:"CubeCells"})," object that contains all the resulting ",(0,l.jsx)(n.code,{children:"CubeCell"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Contracts\\Result\\CubeCell;\n\n/** @var CubeCell $apexCube */\n\n$customerCountryCubes = $apexCube->drillDown('customerCountry');\n"})}),"\n",(0,l.jsxs)(n.p,{children:["In the above example, if the ",(0,l.jsx)(n.code,{children:"$apexCube"})," contains the number 20 as the count\nvalue, the ",(0,l.jsx)(n.code,{children:"$customerCountryCubes"})," might result in several ",(0,l.jsx)(n.code,{children:"CubeCell"})," objects,\neach having different customer countries, such as ",(0,l.jsx)(n.code,{children:"DE"}),", ",(0,l.jsx)(n.code,{children:"US"}),", and ",(0,l.jsx)(n.code,{children:"FR"}),", with\ntheir count values adding to exactly 20."]}),"\n",(0,l.jsxs)(n.h2,{id:"rollup-method",children:[(0,l.jsx)(n.code,{children:"rollUp()"})," method"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"rollUp()"})," method allows you to roll up the data cube to a higher level of\naggregation. It returns the ",(0,l.jsx)(n.code,{children:"CubeCell"})," that represents the rolled-up data.\n",(0,l.jsx)(n.code,{children:"rollUp()"})," basically removes the specified dimension from the tuple and\naggregates the measures accordingly."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Contracts\\Result\\CubeCell;\n\n/** @var CubeCell $cubeOfCountryAndYear */\n\n$cubeOfYear = $cubeOfCountryAndYear->rollUp('country');\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"slice-method",children:[(0,l.jsx)(n.code,{children:"slice()"})," method"]}),"\n",(0,l.jsx)(n.p,{children:"TBD"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},7846:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/cube.dark-78b2cc736e82b55566ae785b80bb9cfa.svg"},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(6540);const l={},r=s.createContext(l);function c(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);