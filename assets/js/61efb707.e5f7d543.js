"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[8539],{6069:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"analytics/aggregate-function/average","title":"Average","description":"Average calculates the average value of a specified property. It requires","source":"@site/docs/analytics/06-aggregate-function/02-average.md","sourceDirName":"analytics/06-aggregate-function","slug":"/analytics/aggregate-function/average","permalink":"/analytics/aggregate-function/average","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/06-aggregate-function/02-average.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Average"},"sidebar":"docs","previous":{"title":"Count, Sum, Max, Min","permalink":"/analytics/aggregate-function/count-sum-max-min"},"next":{"title":"Count Distinct","permalink":"/analytics/aggregate-function/count-distinct"}}');var r=t(4848),i=t(8453);const o={title:"Average"},s=void 0,c={},u=[{value:"Example",id:"example",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Average"})," calculates the average value of a specified property. It requires\nthat other measures are defined for the sum and count of the property. The\naverage is computed as the sum divided by the count. ",(0,r.jsx)(n.code,{children:"Average"})," is a virtual\nmeasure and does not store its value in the database."]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\ORM\\Types\\Types;\nuse Rekalogika\\Analytics\\Core\\AggregateFunction\\Average;\nuse Rekalogika\\Analytics\\Core\\AggregateFunction\\Count;\nuse Rekalogika\\Analytics\\Core\\AggregateFunction\\Sum;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\Entity\\BaseSummary;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\nclass OrderSummary extends BaseSummary\n{\n    #[ORM\\Column(type: Types::INTEGER)]\n    #[Analytics\\Measure(\n        function: new Sum(new PropertyValue('item.price'),\n    )]\n    private ?int $price = null;\n\n    #[ORM\\Column(type: Types::INTEGER)]\n    #[Analytics\\Measure(\n        function: new Count('id'),\n    )]\n    private ?int $count = null;\n\n    #[Analytics\\Measure(\n        // highlight-start\n        function: new Average(\n            sumProperty: 'price',\n            countProperty: 'count',\n        ),\n        // highlight-end\n    )]\n    private ?int $averageOrderValue = null;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, the ",(0,r.jsx)(n.code,{children:"Average"})," function uses the previously defined ",(0,r.jsx)(n.code,{children:"price"})," and\n",(0,r.jsx)(n.code,{children:"count"})," measures to compute the average order value. The ",(0,r.jsx)(n.code,{children:"sumProperty"})," and\n",(0,r.jsx)(n.code,{children:"countProperty"})," parameters specify which properties to use for the sum and count\ncalculations, respectively."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["It is not necessary to store the average value in the database, and therefore\nthe property does not need the ",(0,r.jsx)(n.code,{children:"ORM\\Column"})," attribute."]})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);