"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3174],{6448:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"analytics/value-resolver/basic-value-resolvers","title":"Basic Value Resolvers","description":"Most of the time, we will use either PropertyValueResolver or","source":"@site/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/basic-value-resolvers","permalink":"/analytics/value-resolver/basic-value-resolvers","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Basic Value Resolvers"},"sidebar":"docs","previous":{"title":"Value Resolvers","permalink":"/analytics/value-resolver/"},"next":{"title":"Custom DQL Value Resolver","permalink":"/analytics/value-resolver/custom-dql-value-resolver"}}');var l=r(4848),t=r(8453);const a={title:"Basic Value Resolvers"},o=void 0,i={},c=[{value:"<code>PropertyValueResolver</code>",id:"propertyvalueresolver",level:2},{value:"<code>IdentifierValueResolver</code>",id:"identifiervalueresolver",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(s.p,{children:["Most of the time, we will use either ",(0,l.jsx)(s.code,{children:"PropertyValueResolver"})," or\n",(0,l.jsx)(s.code,{children:"IdentifierValueResolver"})," to get the value from the source entity."]}),"\n",(0,l.jsx)(s.h2,{id:"propertyvalueresolver",children:(0,l.jsx)(s.code,{children:"PropertyValueResolver"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"PropertyValueResolver"})," is used to get the value of a property. Example:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\PropertyValueResolver;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(type: Types::STRING)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new PropertyValueResolver('status'),\n        // highlight-end\n    )]\n    private ?string $status = null;\n}\n"})}),"\n",(0,l.jsx)(s.h2,{id:"identifiervalueresolver",children:(0,l.jsx)(s.code,{children:"IdentifierValueResolver"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"IdentifierValueResolver"})," must be used if the value is not a simple property, but a\nrelated entity."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\IdentifierValueResolver;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\ManyToOne()]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new IdentifierValueResolver('country'),\n        // highlight-end\n    )]\n    private ?Country $country = null;\n}\n"})})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var n=r(6540);const l={},t=n.createContext(l);function a(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);