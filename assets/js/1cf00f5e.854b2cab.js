"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4171],{1342:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=i(5893),s=i(1151);const o={title:"Miscellaneous"},r=void 0,c={id:"collections/misc",title:"Miscellaneous",description:"Composite Primary Keys",source:"@site/docs/collections/04-misc.md",sourceDirName:"collections",slug:"/collections/misc",permalink:"/collections/misc",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/04-misc.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Miscellaneous"},sidebar:"docs",previous:{title:"Key Type Widening",permalink:"/collections/behaviors/key-type-widening"},next:{title:"rekalogika/direct-property-access",permalink:"/direct-property-access/"}},l={},d=[{value:"Composite Primary Keys",id:"composite-primary-keys",level:2},{value:"UUID Primary Keys",id:"uuid-primary-keys",level:2}];function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"composite-primary-keys",children:"Composite Primary Keys"}),"\n",(0,t.jsx)(n.p,{children:"Composite primary keys cannot be supported."}),"\n",(0,t.jsx)(n.h2,{id:"uuid-primary-keys",children:"UUID Primary Keys"}),"\n",(0,t.jsxs)(n.p,{children:["We highly recommend using string-based UUIDs primary key instead of object-based\nUUIDs (like Symfony or Ramsey's ",(0,t.jsx)(n.code,{children:"UuidType"}),"). Note that it does not mean you are\nstoring the UUIDs as ",(0,t.jsx)(n.code,{children:"CHAR(36)"})," in the database. It means your entity uses\n",(0,t.jsx)(n.code,{children:"string"})," instead of ",(0,t.jsx)(n.code,{children:"Uuid"})," as the type of its ID property."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Uid\\UuidV7;\nuse Symfony\\Component\\Uid\\Uuid;\n\nabstract class AbstractEntity\n{\n    #[ORM\\Id]\n    #[ORM\\Column(type: 'guid')]\n    private readonly string $id;\n\n    public function __construct()\n    {\n        $this->id = (new UuidV7())->toRfc4122();\n    }\n\n    final public function getId(): string\n    {\n        return $this->id;\n    }\n\n    final public function getUuid(): Uuid\n    {\n        return new Uuid($this->id);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This way, you still have all the perks of using UUID primary keys, but without\nthe headaches:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You still have compact, binary UUIDs in the database."}),"\n",(0,t.jsx)(n.li,{children:"You still have time-ordered UUIDs."}),"\n",(0,t.jsxs)(n.li,{children:["You still have the means to work with object-based UUIDs in your PHP code\nusing the ",(0,t.jsx)(n.code,{children:"getUuid()"})," method."]}),"\n",(0,t.jsxs)(n.li,{children:["You don't need to change how you work with ",(0,t.jsx)(n.code,{children:"QueryBuilder"}),"'s ",(0,t.jsx)(n.code,{children:"setParameter()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Collection"})," key is now usable. You will be able to reliably call\n",(0,t.jsx)(n.code,{children:"$collection->get($id)"}),". You no longer need to choose whether to use\n",(0,t.jsx)(n.code,{children:"toRfc4122()"})," or ",(0,t.jsx)(n.code,{children:"toBinary()"})," depending on the database driver, or even\ndepending on whether the ",(0,t.jsx)(n.code,{children:"Collection"})," is lazily loaded or not."]}),"\n",(0,t.jsx)(n.li,{children:"If you previously use object-based UUIDs, it should not be difficult to\nmigrate to string-based UUIDs."}),"\n",(0,t.jsxs)(n.li,{children:["By generating the UUID in the constructor, you already have the ID before\n",(0,t.jsx)(n.code,{children:"flush()"}),", which is an often overlooked advantage of using UUID primary keys\nin the first place."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>r});var t=i(7294);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);