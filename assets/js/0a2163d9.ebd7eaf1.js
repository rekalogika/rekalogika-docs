"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[468],{22:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var i=n(5893),s=n(1151);const o={title:"Dispatch Events"},a=void 0,d={id:"domain-event/events",title:"Dispatch Events",description:"When a domain event is dispatched, another event is dispatched. The event wraps",source:"@site/docs/domain-event/04-events.md",sourceDirName:"domain-event",slug:"/domain-event/events",permalink:"/domain-event/events",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/domain-event/04-events.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Dispatch Events"},sidebar:"docs",previous:{title:"Immediate Dispatcher Handling & Troubleshooting",permalink:"/domain-event/immediate-dispatcher"},next:{title:"Tips and Caveats",permalink:"/domain-event/tips"}},r={},c=[];function l(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"When a domain event is dispatched, another event is dispatched. The event wraps\nthe original domain event, allowing you to listen to all domain events in a\nsingle listener."}),"\n",(0,i.jsx)(t.p,{children:"These events are dispatched using the default Symfony event dispatcher."}),"\n",(0,i.jsx)(t.p,{children:"List of the dispatch events:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"DomainEventImmediateDispatch"}),": dispatched immediately after the domain event\nis recorded."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"DomainEventPreFlushDispatch"}),": dispatched before the ",(0,i.jsx)(t.code,{children:"flush()"})," is called."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"DomainEventPostFlushDispatch"}),": dispatched after the ",(0,i.jsx)(t.code,{children:"flush()"})," is called."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This mechanism is created to allow you to build on top of the domain events. For\nexample, you can record the events for audit trails, or publish the events on an\nevent bus."})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>a});var i=n(7294);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);