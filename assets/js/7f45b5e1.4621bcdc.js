"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[2403],{3656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(5893),r=t(1151);const o={title:"Pager"},i=void 0,s={id:"rekapager/pager",title:"Pager",description:"A PagerInterface represents navigation through a collection of items. A view",source:"@site/docs/rekapager/04-pager.md",sourceDirName:"rekapager",slug:"/rekapager/pager",permalink:"/rekapager/pager",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/rekapager/04-pager.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Pager"},sidebar:"docs",previous:{title:"Pageables and Pages",permalink:"/rekapager/pageable-page"},next:{title:"Integrating Rekapager into a Framework",permalink:"/rekapager/integrating"}},c={},l=[{value:"Transforming a Pageable into a Pager",id:"transforming-a-pageable-into-a-pager",level:2},{value:"Rendering the Pager",id:"rendering-the-pager",level:2}];function g(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"PagerInterface"})," represents navigation through a collection of items. A view\nlayer can use it to render a pagination control."]}),"\n",(0,a.jsxs)(n.p,{children:["A pager works at a higher level than a ",(0,a.jsx)(n.code,{children:"PageableInterface"}),". It needs to be able\nto determine the current page from the context of the request, and it needs to\nbe able to generate URLs for each page. Therefore, a factory should be used to\ninstantiate a pager, and the factory will be framework-specific."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The example below uses the Symfony integration provided by the package\n",(0,a.jsx)(n.code,{children:"rekalogika/rekapager-bundle"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"transforming-a-pageable-into-a-pager",children:"Transforming a Pageable into a Pager"}),"\n",(0,a.jsxs)(n.p,{children:["Before we can be able to render a pagination control in the UI, we need to\ntransform the ",(0,a.jsx)(n.code,{children:"PageableInterface"})," into a ",(0,a.jsx)(n.code,{children:"PagerInterface"})," object. To do that,\nwire the ",(0,a.jsx)(n.code,{children:"PagerFactoryInterface"})," service, and use the ",(0,a.jsx)(n.code,{children:"create()"})," method."]}),"\n",(0,a.jsx)(n.p,{children:"Example in a Symfony Controller:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Rekapager\\Bundle\\Contracts\\PagerFactoryInterface;\nuse Rekalogika\\Rekapager\\Bundle\\PagerOptions;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n\nclass MyController extends AbstractController\n{\n    public function index(PagerFactoryInterface $pagerFactory, Request $request)\n    {\n        $pageable = ...; // Create a PageableInterface object\n\n        // highlight-start\n        $pager = $pagerFactory->createPager(\n            pageable: $pageable,\n            request: $request,\n            options: new PagerOptions(\n                proximity: 3,\n            )\n        );\n        // highlight-end\n\n        return $this->render('my_template.html.twig', [\n            'pager' => $pager,\n        ]);\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rendering-the-pager",children:"Rendering the Pager"}),"\n",(0,a.jsxs)(n.p,{children:["In Twig template, you can use the ",(0,a.jsx)(n.code,{children:"rekapager()"})," function to render the pager."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{# Outputs the item from the current page #}\n\n<table class=\"table\">\n    <tr>\n        <th>ID</th>\n        <th>Title</th>\n        <th>Date</th>\n        <th>Content</th>\n    </tr>\n    {% for post in pager.currentPage %}\n        <tr>\n            <td>{{ post.id }}</td>\n            <td>{{ post.title }}</td>\n            <td>{{ post.date|date('Y-m-d') }}</td>\n            <td>{{ post.content }}</td>\n        </tr>\n    {% endfor %}\n</table>\n\n{# Render the pager #}\n\n{{ rekapager(pager) }}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var a=t(7294);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);