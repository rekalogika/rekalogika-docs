"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3799],{8421:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"collections/behaviors/selectable-leak","title":"Selectable Abstraction Leak","description":"Problem","source":"@site/docs/collections/03-behaviors/04-selectable-leak.md","sourceDirName":"collections/03-behaviors","slug":"/collections/behaviors/selectable-leak","permalink":"/collections/behaviors/selectable-leak","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/03-behaviors/04-selectable-leak.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Selectable Abstraction Leak"},"sidebar":"docs","previous":{"title":"Slow Counting","permalink":"/collections/behaviors/counting"},"next":{"title":"Key Type Widening","permalink":"/collections/behaviors/key-type-widening"}}');var o=t(4848),l=t(8453);const a={title:"Selectable Abstraction Leak"},s=void 0,r={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,o.jsxs)(n.p,{children:["Doctrine Collections classes implement ",(0,o.jsx)(n.code,{children:"Selectable"})," interface. This is a\npowerful feature that allows filtering and sorting the collection. However, it\nis also an abstraction leak, and a popular one at that."]}),"\n",(0,o.jsx)(n.p,{children:"To use it, the caller might need to know the internal structure of the class.\nWithout restraint, the knowledge about the internal structure of an entity might\nspread throughout the codebase. And updating the class can potentially break a\nlot of code."}),"\n",(0,o.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,o.jsxs)(n.p,{children:["Our classes do not expose the ",(0,o.jsx)(n.code,{children:"Selectable"})," interface. Instead, they can be\neasily extended. We can easily add expressive, higher-level methods to the class\nto provide the same functionality, but without exposing the inner workings of\nthe class."]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(n.p,{children:["The following is an example of the problem. It is a problem because ",(0,o.jsx)(n.code,{children:"matching()"}),"\nis used outside the entity. It mentions the property 'age', which is almost\nalways private."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"/** @var Country $country */\n\n$workingAgeCitizens = $country->getCitizens()->matching(\n    Criteria::create()\n        ->where(Criteria::expr()->gte('age', 15))\n        ->andWhere(Criteria::expr()->lte('age', 64))\n);\n"})}),"\n",(0,o.jsx)(n.p,{children:"In the future, we might rename the property. If that happens, we would need to\nscour the codebase to find all the places where 'age' is used, and update them\naccordingly."}),"\n",(0,o.jsx)(n.p,{children:"Instead, we should aim to be able to write the above code like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"/** @var Country $country */\n\n$workingAgeCitizens = $country->getCitizens()->inWorkingAge();\n"})}),"\n",(0,o.jsx)(n.p,{children:"To achieve that, we can extend one of our decorator class like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Domain\\Collections\\RecollectionDecorator;\nuse Rekalogika\\Contracts\\Collections\\ReadableRecollection;\n\n/**\n * @extends RecollectionDecorator<int,Citizen>\n */\nclass CitizenCollection extends RecollectionDecorator\n{\n    public function inWorkingAge(): ReadableRecollection\n    {\n        $criteria = $this->matching(\n            Criteria::create()\n                ->where(Criteria::expr()->gte('age', 15))\n                ->andWhere(Criteria::expr()->lte('age', 64))\n        );\n\n        return $this->createCriteriaRecollection(\n            criteria: $criteria,\n            instanceId: __METHOD__,\n        );\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Then, we can use the ",(0,o.jsx)(n.code,{children:"CitizenCollection"})," class in our ",(0,o.jsx)(n.code,{children:"Country"})," class:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Contracts\\Collections\\ReadableRecollection;\n\nclass Country\n{\n    public function getCitizens(): CitizenCollection\n    {\n        return new CitizenCollection(\n            collection: $this->citizen,\n            indexBy: 'id'\n        );\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const o={},l=i.createContext(o);function a(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);