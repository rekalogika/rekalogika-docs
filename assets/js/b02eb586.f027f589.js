"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[367],{603:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var t=a(5893),i=a(1151);const l={title:"Translation"},r=void 0,s={id:"file-bundle/translation",title:"Translation",description:"This chapter explains localization support in the framework.",source:"@site/docs/file-bundle/09-translation.md",sourceDirName:"file-bundle",slug:"/file-bundle/translation",permalink:"/file-bundle/translation",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file-bundle/09-translation.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Translation"},sidebar:"docs",previous:{title:"Filtering",permalink:"/file-bundle/filtering"},next:{title:"Mandatory File",permalink:"/file-bundle/mandatory-file"}},o={},c=[{value:"Translatable Strings",id:"translatable-strings",level:2},{value:"Translation",id:"translation",level:2},{value:"Using the Framework Without Translation",id:"using-the-framework-without-translation",level:2},{value:"Translating to Your Language",id:"translating-to-your-language",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This chapter explains localization support in the framework."}),"\n",(0,t.jsx)(n.h2,{id:"translatable-strings",children:"Translatable Strings"}),"\n",(0,t.jsx)(n.p,{children:"The framework supports localization in several places, including:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"File names. For displaying 'Untitled' in the UI if the file name is null."}),"\n",(0,t.jsx)(n.li,{children:"File type description. For displaying 'Unknown file type' if the file type is\nnot recognized."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Contracts\\File\\FileInterface;\n\n/** @var FileInterface $file */\n\n$name = $file->getName(); // this is translatable\n$baseFileName = $file->getName()->getBase(); // also translatable\n$fullFileName = $file->getName()->getFull(); // translatable, too\n$typeDescription = $file->getType()->getDescription(); // translatable as well\n"})}),"\n",(0,t.jsx)(n.h2,{id:"translation",children:"Translation"}),"\n",(0,t.jsxs)(n.p,{children:["The framework uses Symfony's translation contracts. To translate strings, you\nneed to use the ",(0,t.jsx)(n.code,{children:"TranslatorInterface"})," service:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Contracts\\File\\FileInterface; \nuse Symfony\\Contracts\\Translation\\TranslatorInterface;\n\n/** @var FileInterface $file */\n/** @var TranslatorInterface $translator */\n\n$fileName = $file->getName();\n$translatedFileName = $fileName->trans($translator);\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"File names are not translated. Only 'Untitled' and 'Unknown file type' are\ntranslated."})}),"\n",(0,t.jsx)(n.p,{children:"In Twig:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-twig",children:"{# 'file' is an instance of FileInterface #}\n\nThe file name is {{ file.name|trans }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"using-the-framework-without-translation",children:"Using the Framework Without Translation"}),"\n",(0,t.jsxs)(n.p,{children:["All the translatable strings also implement ",(0,t.jsx)(n.code,{children:"Stringable"}),". Therefore, if your\napplication does not use translations, you can simply cast to string."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Contracts\\File\\FileInterface;\n\n/** @var FileInterface $file */\n\n$fileNameInString = (string) $file->getName();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"translating-to-your-language",children:"Translating to Your Language"}),"\n",(0,t.jsx)(n.p,{children:"To add translations to your language, submit a pull request to the repository\nhere:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/rekalogika/file-src/tree/main/packages/file-bundle/translations",children:"github.com/rekalogika/file-src/tree/main/packages/file-bundle/translations"})}),"\n",(0,t.jsx)(n.p,{children:"Use the English XLIFF as a template."})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>s,a:()=>r});var t=a(7294);const i={},l=t.createContext(i);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);