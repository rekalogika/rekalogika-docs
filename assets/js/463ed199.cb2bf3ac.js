"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3174],{6448:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"analytics/value-resolver/basic-value-resolvers","title":"Basic Value Resolvers","description":"Most of the time, we will use either PropertyValue or","source":"@site/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/basic-value-resolvers","permalink":"/analytics/value-resolver/basic-value-resolvers","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Basic Value Resolvers"},"sidebar":"docs","previous":{"title":"Value Resolvers","permalink":"/analytics/value-resolver/"},"next":{"title":"Custom Expression","permalink":"/analytics/value-resolver/custom-expression"}}');var r=n(4848),a=n(8453);const l={title:"Basic Value Resolvers"},i=void 0,o={},c=[{value:"<code>PropertyValue</code>",id:"propertyvalue",level:2},{value:"<code>IdentifierValue</code>",id:"identifiervalue",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["Most of the time, we will use either ",(0,r.jsx)(s.code,{children:"PropertyValue"})," or\n",(0,r.jsx)(s.code,{children:"IdentifierValue"})," to get the value from the source entity."]}),"\n",(0,r.jsx)(s.h2,{id:"propertyvalue",children:(0,r.jsx)(s.code,{children:"PropertyValue"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"PropertyValue"})," is used to get the value of a property. Example:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(type: Types::STRING)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new PropertyValue('status'),\n        // highlight-end\n    )]\n    private ?string $status = null;\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"identifiervalue",children:(0,r.jsx)(s.code,{children:"IdentifierValue"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"IdentifierValue"})," is used to get the identifier of an entity. It must be used if\nthe value is not a simple property, but a related entity."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\IdentifierValue;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\ManyToOne()]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new IdentifierValue('country'),\n        // highlight-end\n    )]\n    private ?Country $country = null;\n}\n"})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>i});var t=n(6540);const r={},a=t.createContext(r);function l(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);