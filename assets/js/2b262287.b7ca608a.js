"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4164],{1133:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"doctrine-advanced-group-by/flattening","title":"Flattening","description":"It is possible to flatten a GroupBy object into another instance of GroupBy","source":"@site/docs/doctrine-advanced-group-by/02-flattening.md","sourceDirName":"doctrine-advanced-group-by","slug":"/doctrine-advanced-group-by/flattening","permalink":"/doctrine-advanced-group-by/flattening","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/doctrine-advanced-group-by/02-flattening.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Flattening"},"sidebar":"docs","previous":{"title":"GROUP BY Usage","permalink":"/doctrine-advanced-group-by/group-by"},"next":{"title":"GROUPING() Function","permalink":"/doctrine-advanced-group-by/grouping-function"}}');var i=t(4848),r=t(8453);const s={title:"Flattening"},a=void 0,c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["It is possible to flatten a ",(0,i.jsx)(n.code,{children:"GroupBy"})," object into another instance of ",(0,i.jsx)(n.code,{children:"GroupBy"}),"\nwith a single level of grouping sets."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"$groupBy1 = new GroupBy(\n    new RollUp(\n        new Field('a'),\n        new Field('b'),\n    ),\n);\n\n$groupBy2 = new GroupBy(\n    new GroupingSet(\n        new FieldSet(),\n        new FieldSet(\n            new Field('a'),\n        ),\n        new FieldSet(\n            new Field('a'),\n            new Field('b'),\n        ),\n    ),\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, ",(0,i.jsx)(n.code,{children:"$groupBy2"})," is the flattened version of ",(0,i.jsx)(n.code,{children:"$groupBy1"}),".\nYou can transform ",(0,i.jsx)(n.code,{children:"$groupBy1"})," into ",(0,i.jsx)(n.code,{children:"$groupBy2"})," using the ",(0,i.jsx)(n.code,{children:"flatten"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"$flattened = $groupBy1->flatten();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This is useful if you need to know if the ",(0,i.jsx)(n.code,{children:"GroupBy"})," generates more than\n4096 grouping sets, which is the limit of the database. Or, you can use it\nto split the query into multiple smaller queries."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);