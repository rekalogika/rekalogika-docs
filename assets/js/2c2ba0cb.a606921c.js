"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[422],{3752:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"pivot-table/intro","title":"Introduction","description":"A PHP library for transforming multidimensional data into a pivot table.","source":"@site/docs/pivot-table/00-intro.md","sourceDirName":"pivot-table","slug":"/pivot-table/intro","permalink":"/pivot-table/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/pivot-table/00-intro.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Introduction"},"sidebar":"docs","previous":{"title":"rekalogika/pivot-table","permalink":"/pivot-table/"},"next":{"title":"Basic Usage","permalink":"/pivot-table/basic-usage"}}');var s=t(4848),a=t(8453);const o={title:"Introduction"},r=void 0,l={},d=[{value:"Features",id:"features",level:2},{value:"Design Philosophy",id:"design-philosophy",level:2},{value:"Installation",id:"installation",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"A PHP library for transforming multidimensional data into a pivot table."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Handles complex data"}),". Renders complex multi-dimensional data involving\nmultiple dimensions and measures."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexible pivoting"}),": Configure which dimensions should be pivoted (in\ncolumns) vs unpivoted (in rows)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Measures are dimension"}),": Measures are regarded as a special dimension\n",(0,s.jsx)(n.code,{children:"@values"})," that can be flexibly positioned in the pivot structure."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Subtotals"}),": Renders subtotals if they exist in the source data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Accepts simple array data"}),": Compatible with all result set formats. Does\nnot require specific database and database access libraries."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom integration options"}),": Options for deeper integration with your\napplication by providing your custom data structure in table-like data, or in\ndata cube if your data is already in that format."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customizable legends"}),": Define custom labels for dimensions, measures, and\nsubtotals."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Does not require a specific data type"}),": Your dimension members and measure\nvalues can be of any type, including entity objects, money object pattern,\netc. You can supply a custom renderer to format the output as required."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"design-philosophy",children:"Design Philosophy"}),"\n",(0,s.jsx)(n.p,{children:"The library only transforms the data into a pivot table, but does not perform\nany calculations like sum, average, etc. This decision is taken because some\naggregation functions are only available on the database side and cannot be\neasily performed using PHP."}),"\n",(0,s.jsx)(n.p,{children:"If your data needs to be manually aggregated, then a custom aggregation/cubing\nlayer needs to be written."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Install via Composer:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"composer require rekalogika/pivot-table\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);