"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[7842],{5073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rekapager/adapters/doctrine-orm-querybuilder","title":"Doctrine ORM QueryBuilder","description":"QueryBuilderAdapter takes a Doctrine ORM QueryBuilder instance. It supports","source":"@site/docs/rekapager/02-adapters/01-doctrine-orm-querybuilder.md","sourceDirName":"rekapager/02-adapters","slug":"/rekapager/adapters/doctrine-orm-querybuilder","permalink":"/rekapager/adapters/doctrine-orm-querybuilder","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/rekapager/02-adapters/01-doctrine-orm-querybuilder.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Doctrine ORM QueryBuilder"},"sidebar":"docs","previous":{"title":"Adapters","permalink":"/rekapager/adapters/"},"next":{"title":"Doctrine ORM NativeQuery","permalink":"/rekapager/adapters/doctrine-orm-nativequery"}}');var a=t(4848),o=t(8453),i=t(5537),s=t(9329);const l={title:"Doctrine ORM QueryBuilder"},u=void 0,c={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Notes",id:"notes",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Transactions",id:"transactions",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"QueryBuilderAdapter"})," takes a Doctrine ORM ",(0,a.jsx)(n.code,{children:"QueryBuilder"})," instance. It supports\nkeyset and offset pagination."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"composer require rekalogika/rekapager-doctrine-orm-adapter\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you need ",(0,a.jsx)(n.a,{href:"/rekapager/seek-method",children:"SQL row values"})," support, you need to register\nthe necessary DQL function:"]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(s.A,{value:"Symfony",children:[(0,a.jsx)(n.p,{children:"If you are using Symfony, add the following to your configuration:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="config/packages/doctrine.yaml"',children:"doctrine:\n    orm:\n        dql:\n            string_functions:\n                REKAPAGER_ROW_VALUES: Rekalogika\\Rekapager\\Doctrine\\ORM\\RowValuesFunction\n"})})]}),(0,a.jsxs)(s.A,{value:"Manual Wiring",children:[(0,a.jsx)(n.p,{children:"If you wire Doctrine manually, use the following code:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Configuration;\nuse Rekalogika\\Rekapager\\Doctrine\\ORM\\RowValuesFunction;\n\n/** @var Configuration $configuration */\n$configuration\n    ->addCustomStringFunction('REKAPAGER_ROW_VALUES', RowValuesFunction::class);\n"})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\LockMode;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\EntityRepository;\nuse Rekalogika\\Rekapager\\Doctrine\\ORM\\QueryBuilderAdapter;\nuse Rekalogika\\Rekapager\\Keyset\\KeysetPageable;\nuse Rekalogika\\Rekapager\\Offset\\OffsetPageable;\n\n/** @var EntityRepository $postRepository */\n\n$queryBuilder = $postRepository\n    ->createQueryBuilder('p')\n    ->where('p.group = :group')\n    ->setParameter('group', $group)\n    ->addOrderBy('p.date', 'DESC') // a date field that accepts DateTime\n    ->addOrderBy('p.title', 'ASC')\n    ->addOrderBy('p.id', 'ASC');\n\n// highlight-start\n$adapter = new QueryBuilderAdapter(\n    queryBuilder: $queryBuilder,\n    lockMode: LockMode::PESSIMISTIC_WRITE, // optional\n    typeMapping: [\n        'p.date' => Types::DATE_MUTABLE // the type of the date field\n    ],\n    indexBy: 'id' // optional\n);\n// highlight-end\n\n$pageable = new KeysetPageable($adapter);\n// or\n$pageable = new OffsetPageable($adapter);\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"If you don't provide a type mapping, the adapter will try to look it up from\nDoctrine's class metadata. If it fails, it will use heuristics to detect the\ntype for some common objects."})}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"QueryBuilderAdapter"})," does not support QueryBuilder's ",(0,a.jsx)(n.code,{children:"indexBy"})," (the third\nparameter of ",(0,a.jsx)(n.code,{children:"from()"}),", or the second parameter of a repository's\n",(0,a.jsx)(n.code,{children:"createQueryBuilder()"}),"). If you need the feature, use the ",(0,a.jsx)(n.code,{children:"indexBy"})," parameter of\n",(0,a.jsx)(n.code,{children:"QueryBuilderAdapter"})," as the above example."]})}),"\n",(0,a.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,a.jsx)(n.p,{children:"With keyset pagination, there are additional prerequisites:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The underlying ",(0,a.jsx)(n.code,{children:"QueryBuilder"})," object must have a sort order. Be sure to call\n",(0,a.jsx)(n.code,{children:"orderBy()"})," or ",(0,a.jsx)(n.code,{children:"addOrderBy()"})," on the query builder before passing it to the\nadapter."]}),"\n",(0,a.jsxs)(n.li,{children:["If a field in a sort order uses a non-scalar type, you should provide a\n",(0,a.jsx)(n.code,{children:"typeMapping"})," option. The adapter will use it in the ",(0,a.jsx)(n.code,{children:"setParameter()"})," method\nof the ",(0,a.jsx)(n.code,{children:"QueryBuilder"}),". The example above shows how to provide a type mapping\nfor a date field."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,a.jsx)(n.p,{children:"One-to-many and many-to-many joins are not supported. Many-to-one joins are OK."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"// supported because a post has only one author\n$queryBuilder\n    ->from(Post::class, 'p')\n    ->leftJoin('p.author', 'a')\n    ->select('p');\n\n// not supported because a post has many comments\n$queryBuilder\n    ->from(Post::class, 'p')\n    ->leftJoin('p.comments', 'c')\n    ->select('p');\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you have an entity with a one-to-many relationship, you can usually omit the\njoin and Doctrine will fetch the related entities lazily."}),"\n",(0,a.jsx)(n.h2,{id:"transactions",children:"Transactions"}),"\n",(0,a.jsxs)(n.p,{children:["If you use the ",(0,a.jsx)(n.code,{children:"lockMode"})," option, the adapter will pass the option to the\nresulting ",(0,a.jsx)(n.code,{children:"Query"})," object. Example on how to do transactions:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\LockMode;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Doctrine\\ORM\\QueryBuilder;\nuse Rekalogika\\Rekapager\\Keyset\\KeysetPageable;\nuse Rekalogika\\Rekapager\\Doctrine\\ORM\\QueryBuilderAdapter;\n\n/** @var EntityManagerInterface $entityManager */\n/** @var QueryBuilder $queryBuilder */\n\n$adapter = new QueryBuilderAdapter(\n    queryBuilder: $queryBuilder,\n    // highlight-next-line\n    lockMode: LockMode::PESSIMISTIC_WRITE,\n);\n\n/** @var PageableInterface<int,Post> */\n$pageable = new KeysetPageable(\n    adapter: $adapter,\n    itemsPerPage: 10,\n);\n\n// using explicit begin, commit and rollback\n\nforeach ($pageable->getPages() as $page) {\n    $entityManager->beginTransaction();\n\n    try {\n        foreach ($page as $post) {\n            // do something with the post\n        }\n    } catch (\\Throwable $e) {\n        $entityManager->rollback();\n        throw $e;\n    }\n\n    $entityManager->flush();\n    $entityManager->commit();\n}\n\n// using wrap\n\nforeach ($pageable->getPages() as $page) {\n    $entityManager->wrapInTransaction(function () use ($page) {\n        foreach ($page as $post) {\n            // do something with the post\n        }\n    });\n}\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The above can work because ",(0,a.jsx)(n.code,{children:"PageInterface"})," is lazy. The content of the page is\nfetched when you iterate over it, not when you iterate over ",(0,a.jsx)(n.code,{children:"getPages()"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const a={tabItem:"tabItem_Ymn6"};var o=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>j});var r=t(6540),a=t(4164),o=t(5627),i=t(6347),s=t(372),l=t(604),u=t(1861),c=t(8749);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[u,d]=g({queryString:t,groupId:a}),[y,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),m=(()=>{const e=u??y;return h({value:e,tabValues:o})?e:null})();(0,s.A)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,o]),tabValues:o}}var f=t(9136);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=s[t].value;a!==r&&(u(n),i(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...o,className:(0,a.A)("tabs__item",m.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function k(e){const n=y(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",m.tabList),children:[(0,b.jsx)(x,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,b.jsx)(k,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);