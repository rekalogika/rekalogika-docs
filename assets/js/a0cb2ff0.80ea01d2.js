"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3701],{6584:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var t=n(4848),i=n(8453);const c={title:"Type Safety"},s=void 0,r={id:"doctrine-collections-decorator/cookbook/type-safety",title:"Type Safety",description:"We can use collection decoration to ensure that the items in a collection are of",source:"@site/docs/doctrine-collections-decorator/cookbook/11-type-safety.md",sourceDirName:"doctrine-collections-decorator/cookbook",slug:"/doctrine-collections-decorator/cookbook/type-safety",permalink:"/doctrine-collections-decorator/cookbook/type-safety",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/doctrine-collections-decorator/cookbook/11-type-safety.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Type Safety"},sidebar:"docs",previous:{title:"Cookbook",permalink:"/doctrine-collections-decorator/cookbook/"},next:{title:"Record Precounting",permalink:"/doctrine-collections-decorator/cookbook/record-precounting"}},a={},l=[{value:"The Decorator Class",id:"the-decorator-class",level:2},{value:"Usage in the <code>one-to-many</code> Side",id:"usage-in-the-one-to-many-side",level:2}];function d(e){const o={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"We can use collection decoration to ensure that the items in a collection are of\na certain type."}),"\n",(0,t.jsx)(o.admonition,{type:"note",children:(0,t.jsx)(o.p,{children:"We find this usage superfluous most of the time considering static analysis\ntools can do a pretty good job these days. But it is also one of the most common\nobjectives of people asking to have a custom Doctrine collection."})}),"\n",(0,t.jsx)(o.h2,{id:"the-decorator-class",children:"The Decorator Class"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"use Doctrine\\Common\\Collections\\Collection;\nuse Rekalogika\\Collections\\Decorator\\Decorator\\CollectionDecorator;\n\n/**\n * @extends CollectionDecorator<array-key,Book>\n */\nclass Books extends CollectionDecorator\n{\n    // highlight-start\n    private static function assert(mixed $book): Book\n    {\n        if (!$book instanceof Book) {\n            throw new \\InvalidArgumentException('Invalid input');\n        }\n\n        return $book;\n    }\n    // highlight-end\n\n    #[\\Override]\n    public function add(mixed $element): void\n    {\n        // highlight-next-line\n        $this->getWrapped()->add(self::assert($element));\n    }\n\n    #[\\Override]\n    public function set(string|int $key, mixed $value): void\n    {\n        // highlight-next-line\n        $this->getWrapped()->set($key, self::assert($value));\n    }\n}\n"})}),"\n",(0,t.jsxs)(o.h2,{id:"usage-in-the-one-to-many-side",children:["Usage in the ",(0,t.jsx)(o.code,{children:"one-to-many"})," Side"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"use Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n#[ORM\\Entity()]\nclass BookShelf\n{\n    /**\n     * @var Collection<array-key,Book>\n     */\n    #[ORM\\OneToMany(targetEntity: Book::class)]\n    private Collection $books;\n\n    public function __construct()\n    {\n        $this->books = new ArrayCollection();\n    }\n\n    public function getBooks(): Books\n    {\n        // highlight-next-line\n        return new Books($this->books);\n    }\n}\n"})})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>r});var t=n(6540);const i={},c=t.createContext(i);function s(e){const o=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(c.Provider,{value:o},e.children)}}}]);