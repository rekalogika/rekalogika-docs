"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3276],{7219:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"analytics/source-entities/index","title":"Source Entities","description":"When working with a cell, it is possible to easily access the source entities","source":"@site/docs/analytics/13-source-entities/index.md","sourceDirName":"analytics/13-source-entities","slug":"/analytics/source-entities/","permalink":"/analytics/source-entities/","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/13-source-entities/index.md","tags":[],"version":"current","frontMatter":{"title":"Source Entities"},"sidebar":"docs","previous":{"title":"Serialization","permalink":"/analytics/serialization/"},"next":{"title":"Internals","permalink":"/analytics/internals/"}}');var a=n(4848),r=n(8453);const s={title:"Source Entities"},o=void 0,c={},l=[{value:"Iterating Over the Source Entities",id:"iterating-over-the-source-entities",level:2},{value:"Pagination and Other Features",id:"pagination-and-other-features",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["When working with a cell, it is possible to easily access the source entities\nthat were aggregated to form the measures in the cell. This functionality uses\nour ",(0,a.jsx)(t.a,{href:"/rekapager/",children:(0,a.jsx)(t.code,{children:"rekalogika/rekapager"})})," package to efficiently\nhandle large datasets."]}),"\n",(0,a.jsx)(t.h2,{id:"iterating-over-the-source-entities",children:"Iterating Over the Source Entities"}),"\n",(0,a.jsx)(t.p,{children:"To iterate over the source entities of a cell, you can do something like this:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"use Doctrine\\ORM\\EntityManagerInterface;\nuse Rekalogika\\Analytics\\Contracts\\Result\\Cell;\n\n/** @var EntityManagerInterface $entityManager */\n/** @var Cell $cell */\n\n$sourceEntities = $cell->getSourceEntities();\n\nif ($sourceEntities === null) {\n    // if the result is null, then the source entities are not available.\n    throw new \\RuntimeException('Source entities are not available.');\n}\n\n// Safely iterate over the source entities.\nforeach ($sourceEntities->withItemsPerPage(1000)->getPages() as $page) {\n    foreach ($page as $entity) {\n        // Do something with $entity\n    }\n\n    // Clear the EntityManager to free up memory.\n    $entityManager->clear();\n}\n"})}),"\n",(0,a.jsx)(t.h2,{id:"pagination-and-other-features",children:"Pagination and Other Features"}),"\n",(0,a.jsxs)(t.p,{children:["The returned ",(0,a.jsx)(t.code,{children:"PageableInterface"})," object supports all the features provided by\nthe Rekapager package, including pagination, batch processing, and more. You can\nrefer to the ",(0,a.jsx)(t.a,{href:"/rekapager/",children:"Rekapager documentation"})," for more\ndetails."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(6540);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);