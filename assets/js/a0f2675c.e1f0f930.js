"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[9336],{369:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=t(5893),n=t(1151);const s={title:"Pagerfanta Adapter"},i=void 0,o={id:"rekapager/adapters/pagerfanta-adapter",title:"Pagerfanta Adapter",description:"Allows leveraging any of the existing Pagerfanta adapters. The",source:"@site/docs/rekapager/02-adapters/05-pagerfanta-adapter.md",sourceDirName:"rekapager/02-adapters",slug:"/rekapager/adapters/pagerfanta-adapter",permalink:"/rekapager/adapters/pagerfanta-adapter",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/rekapager/02-adapters/05-pagerfanta-adapter.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Pagerfanta Adapter"},sidebar:"docs",previous:{title:"Doctrine Collections Collection",permalink:"/rekapager/adapters/doctrine-collections-collection"},next:{title:"Pageables and Pages",permalink:"/rekapager/pageable-page"}},p={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const a={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:["Allows leveraging any of the existing Pagerfanta adapters. The\n",(0,r.jsx)(a.code,{children:"PagerfantaAdapterAdapter"})," supports only offset pagination. The adapter takes a\nPagerfanta's ",(0,r.jsx)(a.code,{children:"AdapterInterface"})," instance as its argument."]}),"\n",(0,r.jsx)(a.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"composer require rekalogika/rekapager-pagerfanta-adapter\n"})}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-php",children:"use Pagerfanta\\Doctrine\\Collections\\SelectableAdapter;\nuse Rekalogika\\Rekapager\\Offset\\OffsetPageable;\nuse Rekalogika\\Rekapager\\Pagerfanta\\PagerfantaAdapterAdapter;\n\n$criteria = Criteria::create()\n        ->where(Criteria::expr()->eq('group', $group));\n\n$pagerfantaAdapter = new SelectableAdapter($user->getPosts(), $criteria);\n// highlight-next-line\n$adapter = new PagerfantaAdapterAdapter($pagerfantaAdapter);\n\n$pageable = new OffsetPageable($adapter);\n"})}),"\n",(0,r.jsx)(a.admonition,{type:"info",children:(0,r.jsxs)(a.p,{children:["If you already have a ",(0,r.jsx)(a.code,{children:"Pagerfanta"})," instance, you can use ",(0,r.jsx)(a.code,{children:"PagerfantaPageable"}),"\ninstead."]})})]})}function c(e={}){const{wrapper:a}={...(0,n.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,a,t)=>{t.d(a,{Z:()=>o,a:()=>i});var r=t(7294);const n={},s=r.createContext(n);function i(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);