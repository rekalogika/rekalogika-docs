"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[621],{798:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"analytics/value-resolver/custom-expression","title":"Custom Expression","description":"The CustomExpression value resolver allows you to define a custom DQL","source":"@site/docs/analytics/05-value-resolver/02-custom-expression.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/custom-expression","permalink":"/analytics/value-resolver/custom-expression","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/02-custom-expression.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Custom Expression"},"sidebar":"docs","previous":{"title":"Basic Value Resolvers","permalink":"/analytics/value-resolver/basic-value-resolvers"},"next":{"title":"Property Path","permalink":"/analytics/value-resolver/property-path"}}');var r=n(4848),o=n(8453);const a={title:"Custom Expression"},i=void 0,l={},c=[];function u(e){const s={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"CustomExpression"})," value resolver allows you to define a custom DQL\nexpression to get the value from the source entity. This is useful when you need\nto perform complex calculations to get the value."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\CustomExpression;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(enumType: Gender::class, nullable: true)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new CustomExpression(\"\n            CASE\n                WHEN [customer.*] INSTANCE OF Rekalogika\\Analytics\\Tests\\App\\Entity\\IndividualCustomer\n                THEN [customer(Rekalogika\\Analytics\\Tests\\App\\Entity\\IndividualCustomer).gender]\n\n                ELSE NULLIF('a','a')\n            END\n        \"),\n        // highlight-end\n    )]\n    private ?Gender $customerGender = null;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["With the above code, if the ",(0,r.jsx)(s.code,{children:"customer"})," is an ",(0,r.jsx)(s.code,{children:"IndividualCustomer"}),", it will record\ntheir gender. Otherwise, gender is not applicable, and we set it to null."]}),"\n",(0,r.jsxs)(s.p,{children:["The expressions enclosed in square brackets ",(0,r.jsx)(s.code,{children:"[...]"})," are ",(0,r.jsx)(s.a,{href:"./property-path",children:"property\npaths"}),", and will be replaced by the real DQL expression."]})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>i});var t=n(6540);const r={},o=t.createContext(r);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);