"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[635],{2965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"domain-event/pseudo-magic-method","title":"Pseudo Magic Method","description":"The interface DomainEventEmitterInterface implemented by your entities and the","source":"@site/docs/domain-event/03-pseudo-magic-method.md","sourceDirName":"domain-event","slug":"/domain-event/pseudo-magic-method","permalink":"/domain-event/pseudo-magic-method","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/domain-event/03-pseudo-magic-method.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Pseudo Magic Method"},"sidebar":"docs","previous":{"title":"Basic Usage","permalink":"/domain-event/basic-usage"},"next":{"title":"Equatable Domain Events","permalink":"/domain-event/equatable"}}');var i=n(4848),a=n(8453);const s={title:"Pseudo Magic Method"},r=void 0,c={},d=[];function m(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The interface ",(0,i.jsx)(t.code,{children:"DomainEventEmitterInterface"})," implemented by your entities and the\ncorresponding ",(0,i.jsx)(t.code,{children:"DomainEventEmitterTrait"})," add a pseudo magic method ",(0,i.jsx)(t.code,{children:"__remove()"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"__remove()"})," method is called when the entity is about to be removed from\nthe database. You can use this method to record a 'removed' event."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Contracts\\DomainEvent\\DomainEventEmitterInterface;\nuse Rekalogika\\Contracts\\DomainEvent\\DomainEventEmitterTrait;\n\nclass Post implements DomainEventEmitterInterface\n{\n    use DomainEventEmitterTrait;\n\n    // ...\n\n    public function __remove()\n    {\n        $this->recordEvent(new PostRemoved($this->id));\n    }\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"This mechanism is devised because otherwise the entity cannot possibly know if\nit is being removed from the persistence layer."})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);