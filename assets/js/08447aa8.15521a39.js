"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4947],{627:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var i=t(5893),n=t(1151),l=t(4996),r=t(9965);const a={title:"Concepts & Terms"},o=void 0,c={id:"file/concepts",title:"Concepts & Terms",description:"Terms",source:"@site/docs/file/02-concepts.md",sourceDirName:"file",slug:"/file/concepts",permalink:"/file/concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file/02-concepts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Concepts & Terms"},sidebar:"docs",previous:{title:"Installation & Configuration",permalink:"/file/installation"},next:{title:"Using File & FileRepository",permalink:"/file/file"}},d={},h=[{value:"Terms",id:"terms",level:2},{value:"Class Diagram",id:"class-diagram",level:2},{value:"Keys vs Paths",id:"keys-vs-paths",level:2}];function m(e){const s={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"terms",children:"Terms"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"FileRepository"}),": Manages files in the framework. Implements\n",(0,i.jsx)(s.code,{children:"FileRepositoryInterface"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"File"}),": A file in a Flysystem filesystem. Implements ",(0,i.jsx)(s.code,{children:"FileInterface"}),". Each\nfile is identified by a filesystem identifier and a key. A null filesystem\nidentifier denotes that the file is in the local filesystem."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"FilePointer"}),": A pointer to a file. Implements ",(0,i.jsx)(s.code,{children:"FilePointerInterface"}),". Like\na file, a file pointer has a filesystem identifier and a key, but nothing\nelse."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Directory"}),": Contains files, file pointers, and other directories."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Filesystem"}),": A Flysystem filesystem. Implements Flysystem's\n",(0,i.jsx)(s.code,{children:"FilesystemOperator"}),". The caller should not use it directly but use the\n",(0,i.jsx)(s.code,{children:"FileRepository"})," instead."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Local filesystem"}),": A special Flysystem filesystem initialized by the\nframework that points to an unscoped local filesystem, using '/' as its root\nlocation."]}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["A Flysystem filesystem using ",(0,i.jsx)(s.code,{children:"LocalFilesystemAdapter"})," that is set up by the user\nis not considered a local filesystem in this document."]})}),"\n",(0,i.jsx)(s.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"'Interface' in the names are stripped for brevity. Simple getters are\nrepresented by properties."})}),"\n",(0,i.jsx)(r.Z,{alt:"File classes",sources:{light:(0,l.ZP)("/diagrams/light/file.svg"),dark:(0,l.ZP)("/diagrams/dark/file.svg")},width:"100%"}),"\n",(0,i.jsx)(s.h2,{id:"keys-vs-paths",children:"Keys vs Paths"}),"\n",(0,i.jsx)(s.p,{children:"The library encourages using the concept of 'keys', not 'paths'. Although the\nkey can appear similar to a path, the main difference is that the filename is\nnot part of the key, but part of the file's metadata. The key is similar to the\nprimary key of a database table. You can change the 'name' field, but the ID\nusually stays the same."})]})}function f(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>a,a:()=>r});var i=t(7294);const n={},l=i.createContext(n);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);