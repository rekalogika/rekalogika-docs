"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3174],{6448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"analytics/value-resolver/basic-value-resolvers","title":"Basic Value Resolvers","description":"Most of the time, we use either PropertyValue or IdentifierValue to get the","source":"@site/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/basic-value-resolvers","permalink":"/analytics/value-resolver/basic-value-resolvers","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/01-basic-value-resolvers.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Basic Value Resolvers"},"sidebar":"docs","previous":{"title":"Value Resolvers","permalink":"/analytics/value-resolver/"},"next":{"title":"Custom Expression","permalink":"/analytics/value-resolver/custom-expression"}}');var r=t(4848),a=t(8453);const i={title:"Basic Value Resolvers"},l=void 0,o={},c=[{value:"<code>PropertyValue</code>",id:"propertyvalue",level:2},{value:"<code>IdentifierValue</code>",id:"identifiervalue",level:2},{value:"<code>IntegerValue</code>",id:"integervalue",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Most of the time, we use either ",(0,r.jsx)(n.code,{children:"PropertyValue"})," or ",(0,r.jsx)(n.code,{children:"IdentifierValue"})," to get the\nvalue from the source entity."]}),"\n",(0,r.jsx)(n.h2,{id:"propertyvalue",children:(0,r.jsx)(n.code,{children:"PropertyValue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PropertyValue"})," is used to get the value of a property. Example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Column(type: Types::STRING)]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new PropertyValue('status'),\n        // highlight-end\n    )]\n    private ?string $status = null;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"identifiervalue",children:(0,r.jsx)(n.code,{children:"IdentifierValue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"IdentifierValue"})," is used to get the identifier of an entity. It must be used if\nthe value is not a simple property, but a related entity."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\IdentifierValue;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\ManyToOne()]\n    #[Analytics\\Dimension(\n        // highlight-start\n        source: new IdentifierValue('country'),\n        // highlight-end\n    )]\n    private ?Country $country = null;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integervalue",children:(0,r.jsx)(n.code,{children:"IntegerValue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"IntegerValue"})," is like ",(0,r.jsx)(n.code,{children:"PropertyValue"}),", but implements ",(0,r.jsx)(n.code,{children:"PartitionValueResolver"}),"\nand returns an integer value. Usually, it is used in partitions where the\nsource property key is an integer."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\Partition\\DefaultIntegerPartition;\n\n#[ORM\\Entity()]\n#[Analytics\\Summary(\n    sourceClass: Order::class,\n)]\nclass OrderSummary extends Summary\n{\n    #[ORM\\Embedded()]\n    // highlight-next-line\n    #[Analytics\\Partition(new IntegerValue('id'))]\n    private DefaultIntegerPartition $partition;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);