"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[8251],{2602:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"analytics/user-interface/chart","title":"Chart","description":"To render the query result as a chart, you can use the ChartBuilder service.","source":"@site/docs/analytics/11-user-interface/02-chart.md","sourceDirName":"analytics/11-user-interface","slug":"/analytics/user-interface/chart","permalink":"/analytics/user-interface/chart","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/11-user-interface/02-chart.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Chart"},"sidebar":"docs","previous":{"title":"Pivot Table & Regular Table","permalink":"/analytics/user-interface/pivot-table"},"next":{"title":"Formatter Services","permalink":"/analytics/user-interface/formatter-services"}}');var a=r(4848),s=r(8453);const c={title:"Chart"},i=void 0,o={},l=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["To render the query result as a chart, you can use the ",(0,a.jsx)(t.code,{children:"ChartBuilder"})," service.\nIt returns a ",(0,a.jsx)(t.code,{children:"Chart"})," instance of the ",(0,a.jsx)(t.code,{children:"symfony/ux-chartjs"})," package."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"ChartBuilder"})," is meant to be a simple service that tries to automatically\nbuild a chart from a query result without requiring too much configuration.\nWhile it is convenient, it is currently not very flexible."]}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Contracts\\SummaryManager;\nuse Rekalogika\\Analytics\\Frontend\\Chart\\ChartBuilder;\nuse Rekalogika\\Analytics\\Frontend\\Chart\\ChartType;\n\n/** @var SummaryManager $summaryManager */\n/** @var ChartBuilder $chartBuilder */\n\n$result = $summaryManager\n    ->createQuery()\n    // ...\n    ->getResult();\n\n$chart = $chartBuilder->createChart(\n    result: $result,\n    chartType: ChartType::Auto,\n);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Then, in your Twig template, you can render the chart using the ",(0,a.jsx)(t.code,{children:"render_chart()"}),"\nfunction provided by the ",(0,a.jsx)(t.code,{children:"symfony/ux-chartjs"})," package:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-twig",children:"{{ render_chart(chart) }}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var n=r(6540);const a={},s=n.createContext(a);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);