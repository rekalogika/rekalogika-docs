"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[950],{6364:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"analytics/value-resolver/creating-value-resolvers","title":"Creating Value Resolvers","description":"To create a value resolver, you only need to implement the ValueResolver","source":"@site/docs/analytics/05-value-resolver/06-creating-value-resolvers.md","sourceDirName":"analytics/05-value-resolver","slug":"/analytics/value-resolver/creating-value-resolvers","permalink":"/analytics/value-resolver/creating-value-resolvers","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/05-value-resolver/06-creating-value-resolvers.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Creating Value Resolvers"},"sidebar":"docs","previous":{"title":"Property Path","permalink":"/analytics/value-resolver/property-path"},"next":{"title":"Aggregate Functions","permalink":"/analytics/aggregate-function/"}}');var a=t(4848),s=t(8453);const o={title:"Creating Value Resolvers"},l=void 0,i={},c=[];function u(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["To create a value resolver, you only need to implement the ",(0,a.jsx)(n.code,{children:"ValueResolver"}),"\ninterface."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"namespace Rekalogika\\Analytics\\Contracts\\Summary;\n\nuse Rekalogika\\Analytics\\Contracts\\Context\\SourceQueryContext;\n\ninterface ValueResolver\n{\n    public function getExpression(SourceQueryContext $context): string;\n\n    /**\n     * @return list<string>\n     */\n    public function getInvolvedProperties(): array;\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you need the value resolver to be usable in a hierarchy context, you also\nneed to implement the ",(0,a.jsx)(n.code,{children:"HierarchyAware"})," interface. It allows the framework to\nsupply the input value defined in the parent summary object."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"namespace Rekalogika\\Analytics\\Contracts\\Hierarchy;\n\nuse Rekalogika\\Analytics\\Contracts\\Summary\\ValueResolver;\n\ninterface HierarchyAware\n{\n    public function withInput(ValueResolver $input): static;\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);