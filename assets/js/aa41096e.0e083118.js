"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3114],{5537:(e,t,n)=>{n.d(t,{A:()=>x});var a=n(6540),o=n(4164),r=n(5627),i=n(6347),s=n(372),u=n(604),l=n(1861),c=n(8749);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}(n);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=d(e),[i,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[l,p]=b({queryString:n,groupId:o}),[m,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,c.Dv)(n);return[o,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),k=(()=>{const e=l??m;return h({value:e,tabValues:r})?e:null})();(0,s.A)((()=>{k&&u(k)}),[k]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);u(e),p(e),f(e)}),[p,f,r]),tabValues:r}}var f=n(9136);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var A=n(4848);function g(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),o=s[n].value;o!==a&&(l(t),i(o))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return(0,A.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,A.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>{u.push(e)},onKeyDown:p,onClick:c,...r,className:(0,o.A)("tabs__item",k.tabItem,r?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,A.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function v(e){const t=m(e);return(0,A.jsxs)("div",{className:(0,o.A)("tabs-container",k.tabList),children:[(0,A.jsx)(g,{...t,...e}),(0,A.jsx)(y,{...t,...e})]})}function x(e){const t=(0,f.A)();return(0,A.jsx)(v,{...e,children:p(e.children)},String(t))}},5634:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>u,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"api-lite/basic-endpoints/patch-put-update","title":"PATCH and PUT Endpoint for Entity Update","description":"The properties in the input DTO are uninitialized. This is important for PATCH","source":"@site/docs/api-lite/52-basic-endpoints/54-patch-put-update.md","sourceDirName":"api-lite/52-basic-endpoints","slug":"/api-lite/basic-endpoints/patch-put-update","permalink":"/api-lite/basic-endpoints/patch-put-update","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/api-lite/52-basic-endpoints/54-patch-put-update.md","tags":[],"version":"current","sidebarPosition":54,"frontMatter":{"title":"PATCH and PUT Endpoint for Entity Update"},"sidebar":"docs","previous":{"title":"POST Endpoint for Entity Creation","permalink":"/api-lite/basic-endpoints/post-create"},"next":{"title":"DELETE Endpoint","permalink":"/api-lite/basic-endpoints/delete"}}');var o=n(4848),r=n(8453),i=n(5537),s=n(9329);const u={title:"PATCH and PUT Endpoint for Entity Update"},l=void 0,c={},p=[];function d(e){const t={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(i.A,{queryString:"tab",groupId:"api",children:[(0,o.jsx)(s.A,{value:"apiresource",label:"API Resource",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-php",metastring:'title="src/ApiResource/Admin/BookDto.php"',children:"use ApiPlatform\\Metadata\\ApiResource;\nuse ApiPlatform\\Metadata\\Patch;\nuse App\\ApiInput\\BookInputDto;\nuse App\\ApiState\\Admin\\Book\\BookProvider;\nuse App\\ApiState\\Admin\\Book\\BookUpdateProcessor;\n\n#[ApiResource(\n    shortName: 'Admin/Book',\n    routePrefix: '/admin',\n    operations: [\n        // ...\n        new Patch(\n            uriTemplate: '/books/{id}',\n            input: BookInputDto::class,\n            processor: BookUpdateProcessor::class,\n            read: false,\n        ),\n        new Put(\n            uriTemplate: '/books/{id}',\n            input: BookInputDto::class,\n            processor: BookUpdateProcessor::class,\n            read: false,\n        ),\n        // ...\n    ]\n)]\nclass BookDto\n{\n    // ...\n}\n"})})}),(0,o.jsxs)(s.A,{value:"inputdto",label:"Input DTO",children:[(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-php",metastring:'title="src/ApiInput/BookInputDto.php"',children:"namespace App\\ApiInput;\n\nclass BookInputDto\n{\n    public string $title;\n    public string $description;\n}\n"})}),(0,o.jsxs)(t.admonition,{type:"warning",children:[(0,o.jsx)(t.p,{children:"The properties in the input DTO are uninitialized. This is important for PATCH\nbecause the client may send only the properties that need to be updated. The\nmapper will not update the property on the entity's side if the property in\nthe input DTO is uninitialized."}),(0,o.jsx)(t.p,{children:"If it were initialized to null, then it will be set to null on the entity, which\nis probably not what we want."})]})]}),(0,o.jsx)(s.A,{value:"stateprocessor",label:"State Processor",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-php",metastring:'title="src/ApiState/Admin/Book/BookUpdateProcessor.php"',children:"namespace App\\ApiState\\Admin\\Book;\n\nuse ApiPlatform\\Metadata\\Operation;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse App\\ApiInput\\BookInputDto;\nuse App\\ApiResource\\Admin\\BookDto;\nuse App\\Repository\\BookRepository;\nuse Rekalogika\\ApiLite\\Exception\\NotFoundException;\nuse Rekalogika\\ApiLite\\State\\AbstractProcessor;\n\n/**\n * @extends AbstractProcessor<BookInputDto,BookDto>\n */\nclass BookUpdateProcessor extends AbstractProcessor\n{\n    public function __construct(\n        private EntityManagerInterface $entityManager,\n        private BookRepository $bookRepository,\n    ) {\n    }\n\n    public function process(\n        mixed $data,\n        Operation $operation,\n        array $uriVariables = [],\n        array $context = []\n    ) {\n        // Get the book from the database\n        $book = $this->bookRepository\n            ->find($uriVariables['id'] ?? null)\n            ?? throw new NotFoundException('Book not found');\n\n        // Check for authorization\n        $this->denyAccessUnlessGranted('update', $book);\n\n        // Update the book by mapping the input DTO to the entity. In a more\n        // complex scenario you might need to do this differently, possibly\n        // without the mapper\n        $this->map($data, $book);\n\n        // Flush the changes to the database\n        $this->entityManager->flush();\n\n        // Map the resulting Book to the output DTO, and return it.\n        return $this->map($book, BookDto::class);\n    }\n}\n"})})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(6540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},9329:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var a=n(4164);const o={tabItem:"tabItem_Ymn6"};var r=n(4848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,i),hidden:n,children:t})}}}]);