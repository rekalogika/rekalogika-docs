"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4825],{1520:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>m,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"analytics/time-dimension/dimension-groups","title":"Dimension Groups","description":"If you need to summarize your data by time, most of the time you will want to","source":"@site/docs/analytics/08-time-dimension/01-dimension-groups.md","sourceDirName":"analytics/08-time-dimension","slug":"/analytics/time-dimension/dimension-groups","permalink":"/analytics/time-dimension/dimension-groups","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/08-time-dimension/01-dimension-groups.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Dimension Groups"},"sidebar":"docs","previous":{"title":"Time Dimension","permalink":"/analytics/time-dimension/"},"next":{"title":"Dimensions","permalink":"/analytics/time-dimension/dimensions"}}');var s=i(4848),o=i(8453);const a={title:"Dimension Groups"},r=void 0,m={},d=[{value:"Example",id:"example",level:2},{value:"Available Dimension Groups",id:"available-dimension-groups",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"If you need to summarize your data by time, most of the time you will want to\nuse one of the pre-made time dimension groups. It allows you to break down your\ndata by year, month, day, hour, and other time units."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Doctrine\\Common\\Collections\\Order;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\Metadata as Analytics;\nuse Rekalogika\\Analytics\\Core\\Entity\\BaseSummary;\nuse Rekalogika\\Analytics\\Core\\ValueResolver\\PropertyValue;\nuse Rekalogika\\Analytics\\Time\\Dimension\\System\\GregorianDateWithHour;\nuse Symfony\\Component\\Translation\\TranslatableMessage;\n\nclass OrderSummary extends BaseSummary\n{\n    #[ORM\\Embedded()]\n    // highlight-start\n    #[Analytics\\Dimension(\n        source: new PropertyValue('time'),\n        label: new TranslatableMessage('Placed Time'),\n        orderBy: Order::Ascending,\n    )]\n    #[TimeProperties(\n        sourceTimeZone: new \\DateTimeZone('UTC'),\n        summaryTimeZone: new \\DateTimeZone('Asia/Jakarta'),\n    )]\n    private GregorianDateWithHour $time;\n    // highlight-end\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the property ",(0,s.jsx)(n.code,{children:"$time"})," in the ",(0,s.jsx)(n.code,{children:"OrderSummary"})," class will be\nsummarized into the ",(0,s.jsx)(n.code,{children:"GregorianDateWithHour"})," dimension group. You will be able to\nselect the time using the notation ",(0,s.jsx)(n.code,{children:"time.year.year"}),", ",(0,s.jsx)(n.code,{children:"time.month.month"}),",\n",(0,s.jsx)(n.code,{children:"time.month.monthOfYear"}),", ",(0,s.jsx)(n.code,{children:"time.date.date"}),", etc."]}),"\n",(0,s.jsx)(n.h2,{id:"available-dimension-groups",children:"Available Dimension Groups"}),"\n",(0,s.jsx)(n.p,{children:"You can use any of these pre-made dimension groups in your summaries, or use\nthese as a base to create your own custom dimension groups."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{alt:"Dimension groups",src:i(7715).A+"#light",width:"894",height:"576"}),"\n",(0,s.jsx)(n.img,{alt:"Dimension groups",src:i(8661).A+"#dark",width:"894",height:"576"})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"In the diagram above, inheritance is conceptual, and implemented using a trait.\nDoctrine does not support inheritance in embedded objects, so any inheritance\nmust be done using traits and interfaces."})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},7715:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/dimension-group.light-48449d0778d5a94ff4952698ece956c5.svg"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},8661:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/dimension-group.dark-a5d4e54089b1c545d3056105b3a019dd.svg"}}]);