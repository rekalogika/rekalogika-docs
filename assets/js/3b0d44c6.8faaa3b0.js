"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[6777],{5892:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var o=l(5893),i=l(1151);const t={title:"Query-Backed Collection"},c=void 0,r={id:"collections/implementations/query-collection",title:"Query-Backed Collection",description:"A collection class using a QueryBuilder as the data source. Unlike doing the",source:"@site/docs/collections/02-implementations/02-query-collection.md",sourceDirName:"collections/02-implementations",slug:"/collections/implementations/query-collection",permalink:"/collections/implementations/query-collection",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/02-implementations/02-query-collection.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Query-Backed Collection"},sidebar:"docs",previous:{title:"Collection Decorators",permalink:"/collections/implementations/decorators"},next:{title:"Repository",permalink:"/collections/implementations/repository"}},s={},a=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"The Minimal Flavor",id:"the-minimal-flavor",level:2},{value:"Extending <code>QueryRecollection</code>",id:"extending-queryrecollection",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["A collection class using a ",(0,o.jsx)(n.code,{children:"QueryBuilder"})," as the data source. Unlike doing the\nquery in the traditional way, this class allows lazy loading. You can safely\npass the object around, and it will only execute the query when you start\ngetting items from it."]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"composer require rekalogika/collections-orm\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Rekalogika\\Collections\\ORM\\QueryRecollection;\n\n$queryBuilder = ... // create a QueryBuilder instance\n\n$collection = new QueryRecollection(\n    queryBuilder: $queryBuilder,\n    indexBy: 'id'\n);\n\n// use $collection like a regular Collection or Recollection\n"})}),"\n",(0,o.jsx)(n.h2,{id:"the-minimal-flavor",children:"The Minimal Flavor"}),"\n",(0,o.jsxs)(n.p,{children:["The minimal version of ",(0,o.jsx)(n.code,{children:"QueryRecollection"})," is ",(0,o.jsx)(n.code,{children:"QueryPageable"}),", which implements\n",(0,o.jsx)(n.code,{children:"PageableRecollection"}),". Simply replace ",(0,o.jsx)(n.code,{children:"QueryRecollection"})," with ",(0,o.jsx)(n.code,{children:"QueryPageable"})," in\nthe example above."]}),"\n",(0,o.jsxs)(n.h2,{id:"extending-queryrecollection",children:["Extending ",(0,o.jsx)(n.code,{children:"QueryRecollection"})]}),"\n",(0,o.jsx)(n.p,{children:"TBD"})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,l)=>{l.d(n,{Z:()=>r,a:()=>c});var o=l(7294);const i={},t=o.createContext(i);function c(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);