"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[360],{8453:(t,n,e)=>{e.d(n,{R:()=>o,x:()=>c});var i=e(6540);const a={},s=i.createContext(a);function o(t){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),i.createElement(s.Provider,{value:n},t.children)}},9559:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"analytics/aggregate-function/count-distinct","title":"Count Distinct","description":"Count Distinct is an aggregate function that counts the number of distinct","source":"@site/docs/analytics/06-aggregate-function/03-count-distinct.md","sourceDirName":"analytics/06-aggregate-function","slug":"/analytics/aggregate-function/count-distinct","permalink":"/analytics/aggregate-function/count-distinct","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/06-aggregate-function/03-count-distinct.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Count Distinct"},"sidebar":"docs","previous":{"title":"Count, Sum, Max, and Min","permalink":"/analytics/aggregate-function/count-sum-max-min"},"next":{"title":"Internals","permalink":"/analytics/internals/"}}');var a=e(4848),s=e(8453);const o={title:"Count Distinct"},c=void 0,r={},u=[];function l(t){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Count Distinct is an aggregate function that counts the number of distinct\nvalues in a specified property. Analytics requires the\n",(0,a.jsx)(n.a,{href:"https://github.com/citusdata/postgresql-hll",children:"postgresql-hll"})," extension to be\ninstalled in the database to use this function."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\AggregateFunction\\CountDistinct;\nuse Rekalogika\\Analytics\\Attribute as Analytics;\nuse Rekalogika\\Analytics\\ValueResolver\\EntityValueResolver;\n\nclass OrderSummary extends Summary implements HasQueryBuilderModifier\n{\n    // highlight-next-line\n    #[ORM\\Column(type: 'rekalogika_hll')]\n    #[Analytics\\Measure(\n        // highlight-next-line\n        function: new CountDistinct(new EntityValueResolver('customer')),\n    )]\n    private ?int $uniqueCustomers = null;\n}\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Like with other implementations of Count Distinct in data warehousing, this\nfunction returns an approximate count of distinct values, not an exact count."})})]})}function d(t={}){const{wrapper:n}={...(0,s.R)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}}}]);