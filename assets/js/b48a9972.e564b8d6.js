"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[7465],{3179:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"collections/misc/uuid","title":"UUID Primary Keys","description":"If you need UUID primary keys, we highly recommend using string-based UUIDs","source":"@site/docs/collections/04-misc/01-uuid.md","sourceDirName":"collections/04-misc","slug":"/collections/misc/uuid","permalink":"/collections/misc/uuid","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/04-misc/01-uuid.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"UUID Primary Keys"},"sidebar":"docs","previous":{"title":"Miscellaneous","permalink":"/collections/misc/"},"next":{"title":"rekalogika/direct-property-access","permalink":"/direct-property-access/"}}');var s=i(4848),o=i(8453);const r={title:"UUID Primary Keys"},c=void 0,d={},l=[];function a(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["If you need UUID primary keys, we highly recommend using string-based UUIDs\nprimary key instead of object-based UUIDs (like Symfony or Ramsey's ",(0,s.jsx)(n.code,{children:"UuidType"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that it does not mean you are storing the UUIDs as ",(0,s.jsx)(n.code,{children:"CHAR(36)"})," in the\ndatabase. It means your entity uses ",(0,s.jsx)(n.code,{children:"string"})," instead of ",(0,s.jsx)(n.code,{children:"Uuid"})," as the type of\nits ID property."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Uid\\UuidV7;\nuse Symfony\\Component\\Uid\\Uuid;\n\nabstract class AbstractEntity\n{\n    #[ORM\\Id]\n    #[ORM\\Column(type: 'guid')]\n    private readonly string $id;\n\n    public function __construct()\n    {\n        $this->id = (new UuidV7())->toRfc4122();\n    }\n\n    // with PHP >= 8.3 only:\n    public function __clone()\n    {\n        $this->id = (new UuidV7())->toRfc4122();\n    }\n\n    final public function getId(): string\n    {\n        return $this->id;\n    }\n\n    final public function getUuid(): Uuid\n    {\n        return new Uuid($this->id);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"This way, you retain all the benefits of using UUID primary keys, with all the\nbest practices, but without the headaches:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You still have compact, binary UUIDs in the database."}),"\n",(0,s.jsx)(n.li,{children:"You still have time-ordered UUIDs."}),"\n",(0,s.jsxs)(n.li,{children:["You still have the means to work with object-based UUIDs in your PHP code\nusing the ",(0,s.jsx)(n.code,{children:"getUuid()"})," method."]}),"\n",(0,s.jsxs)(n.li,{children:["You don't need to change how you work with ",(0,s.jsx)(n.code,{children:"QueryBuilder"}),"'s ",(0,s.jsx)(n.code,{children:"setParameter()"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The keys in a ",(0,s.jsx)(n.code,{children:"Collection"})," with ",(0,s.jsx)(n.code,{children:"indexBy"})," are now usable. You will be able to\nreliably call ",(0,s.jsx)(n.code,{children:"$collection->get($id)"}),". You no longer need to choose whether to\nuse ",(0,s.jsx)(n.code,{children:"toRfc4122()"})," or ",(0,s.jsx)(n.code,{children:"toBinary()"})," depending on the database driver, or even\ndepending on whether the ",(0,s.jsx)(n.code,{children:"Collection"})," is lazily loaded or not."]}),"\n",(0,s.jsx)(n.li,{children:"If you previously used object-based UUIDs, it should not be difficult to\nmigrate to string-based UUIDs."}),"\n",(0,s.jsxs)(n.li,{children:["By generating the UUID in the constructor, new entities already have the ID\nbefore ",(0,s.jsx)(n.code,{children:"flush()"}),", which is an often overlooked advantage of using UUID primary\nkeys in the first place."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);