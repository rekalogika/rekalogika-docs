"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[6133],{1224:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>m,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"analytics/working-with-summary","title":"Working with Summaries","description":"To work with the summary entities, the framework provides SummaryManager","source":"@site/docs/analytics/04-working-with-summary.md","sourceDirName":"analytics","slug":"/analytics/working-with-summary","permalink":"/analytics/working-with-summary","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/04-working-with-summary.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Working with Summaries"},"sidebar":"docs","previous":{"title":"Housekeeping","permalink":"/analytics/housekeeping"},"next":{"title":"Internals","permalink":"/analytics/internals/"}}');var a=n(4848),s=n(8453);const i={title:"Working with Summaries"},o=void 0,m={},c=[{value:"<code>SummaryManager</code>",id:"summarymanager",level:2},{value:"Querying the Summary",id:"querying-the-summary",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:["To work with the summary entities, the framework provides ",(0,a.jsx)(r.code,{children:"SummaryManager"}),"\nand ",(0,a.jsx)(r.code,{children:"SummaryManagerRegistry"}),"."]}),"\n",(0,a.jsx)(r.h2,{id:"summarymanager",children:(0,a.jsx)(r.code,{children:"SummaryManager"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"SummaryManager"})," is a service that lets you interact with a specific summary\nentity. To get an instance of ",(0,a.jsx)(r.code,{children:"SummaryManager"}),", you can use the\n",(0,a.jsx)(r.code,{children:"SummaryManagerRegistry"})," service."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"use Rekalogika\\Analytics\\SummaryManagerRegistry;\n\n/** @var SummaryManagerRegistry $summaryManagerRegistry */\n\n$summaryManager = $summaryManagerRegistry->getManager(YourSummary::class);\n"})}),"\n",(0,a.jsx)(r.h2,{id:"querying-the-summary",children:"Querying the Summary"}),"\n",(0,a.jsxs)(r.p,{children:["You can query the summary entity using the ",(0,a.jsx)(r.code,{children:"createQuery"})," method. The method\nreturns an instance of ",(0,a.jsx)(r.code,{children:"Query"})," that you can use to build your query."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"use Rekalogika\\Analytics\\SummaryManagerRegistry;\n\n/** @var SummaryManagerRegistry $summaryManagerRegistry */\n\n$result = $summaryManagerRegistry\n  ->getManager(OrderSummary::class)\n  ->createQuery()\n  ->select('price', 'count') // property names of the measures\n  ->groupBy('time.month', 'customerCountry') // property name of the dimension\n  ->getResult();\n"})}),"\n",(0,a.jsxs)(r.p,{children:["The result is an instance of ",(0,a.jsx)(r.code,{children:"SummaryResult"}),". It presents the data in the form\nof a tree, with measures already unpivoted for convenience. The order of the\n",(0,a.jsx)(r.code,{children:"groupBy"})," arguments determines the order of the dimensions in the tree. With the\nexample above, the ",(0,a.jsx)(r.code,{children:"time.month"})," property is the first level of the tree, and the\n",(0,a.jsx)(r.code,{children:"customerCountry"})," property is the second level."]})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var t=n(6540);const a={},s=t.createContext(a);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);