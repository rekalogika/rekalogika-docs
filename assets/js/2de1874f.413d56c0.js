"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[4542],{4879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"analytics/summary-entity/measures","title":"Measures","description":"Measures are quantitative values that are aggregated in a summary table. In SQL,","source":"@site/docs/analytics/02-summary-entity/04-measures.md","sourceDirName":"analytics/02-summary-entity","slug":"/analytics/summary-entity/measures","permalink":"/analytics/summary-entity/measures","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/02-summary-entity/04-measures.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Measures"},"sidebar":"docs","previous":{"title":"Dimensions","permalink":"/analytics/summary-entity/dimensions"},"next":{"title":"Housekeeping","permalink":"/analytics/housekeeping"}}');var a=t(4848),i=t(8453);const r={title:"Measures"},o=void 0,c={},u=[{value:"Aggregate Functions",id:"aggregate-functions",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Measures are quantitative values that are aggregated in a summary table. In SQL,\nthese are fields that you would use in a ",(0,a.jsx)(n.code,{children:"SUM"}),", ",(0,a.jsx)(n.code,{children:"COUNT"}),", and other aggregate\nfunctions."]}),"\n",(0,a.jsxs)(n.p,{children:["Measures are defined using the ",(0,a.jsx)(n.code,{children:"#[Analytics\\Measure]"})," attribute."]}),"\n",(0,a.jsx)(n.h2,{id:"aggregate-functions",children:"Aggregate Functions"}),"\n",(0,a.jsxs)(n.p,{children:["The most important argument in the ",(0,a.jsx)(n.code,{children:"#[Analytics\\Measure]"})," attribute is the\n",(0,a.jsx)(n.code,{children:"function"})," argument. This argument is used to define the aggregation function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Rekalogika\\Analytics\\Core\\AggregateFunction\\Sum;\nuse Rekalogika\\Analytics\\Contracts\\Metadata as Analytics;\n\nclass YourSummary extends Summary\n{\n    #[ORM\\Column(type: Types::INTEGER)]\n    #[Analytics\\Measure(\n        // highlight-start\n        function: new Sum('price'),\n        // highlight-end\n    )]\n    private ?int $price = null;\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The above measure will sum the ",(0,a.jsx)(n.code,{children:"price"})," property of the source entity."]}),"\n",(0,a.jsxs)(n.p,{children:["Read more about aggregate functions in the ",(0,a.jsx)(n.a,{href:"../aggregate-function",children:"aggregate\nfunctions"})," section."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);