"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[7842],{2524:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"rekapager/adapters/doctrine-orm-querybuilder","title":"Doctrine ORM QueryBuilder","description":"QueryBuilderAdapter takes a Doctrine ORM QueryBuilder instance. It supports","source":"@site/docs/rekapager/02-adapters/01-doctrine-orm-querybuilder.md","sourceDirName":"rekapager/02-adapters","slug":"/rekapager/adapters/doctrine-orm-querybuilder","permalink":"/rekapager/adapters/doctrine-orm-querybuilder","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/rekapager/02-adapters/01-doctrine-orm-querybuilder.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Doctrine ORM QueryBuilder"},"sidebar":"docs","previous":{"title":"Adapters","permalink":"/rekapager/adapters/"},"next":{"title":"Doctrine ORM NativeQuery","permalink":"/rekapager/adapters/doctrine-orm-nativequery"}}');var a=t(4848),o=t(8453),i=t(1470),s=t(9365);const l={title:"Doctrine ORM QueryBuilder"},u=void 0,d={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Notes",id:"notes",level:2},{value:"Limitations",id:"limitations",level:2}];function p(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"QueryBuilderAdapter"})," takes a Doctrine ORM ",(0,a.jsx)(r.code,{children:"QueryBuilder"})," instance. It supports\nkeyset and offset pagination."]}),"\n",(0,a.jsx)(r.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"composer require rekalogika/rekapager-doctrine-orm-adapter\n"})}),"\n",(0,a.jsxs)(r.p,{children:["If you need ",(0,a.jsx)(r.a,{href:"/rekapager/seek-method",children:"SQL row values"})," support, you need to register\nthe necessary DQL function:"]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(s.A,{value:"Symfony",children:[(0,a.jsx)(r.p,{children:"If you are using Symfony, add the following to your configuration:"}),(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-yaml",metastring:'title="config/packages/doctrine.yaml"',children:"doctrine:\n    orm:\n        dql:\n            string_functions:\n                REKAPAGER_ROW_VALUES: Rekalogika\\Rekapager\\Doctrine\\ORM\\RowValuesFunction\n"})})]}),(0,a.jsxs)(s.A,{value:"Manual Wiring",children:[(0,a.jsx)(r.p,{children:"If you wire Doctrine manually, use the following code:"}),(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"use Doctrine\\ORM\\Configuration;\nuse Rekalogika\\Rekapager\\Doctrine\\ORM\\RowValuesFunction;\n\n/** @var Configuration $configuration */\n$configuration\n    ->addCustomStringFunction('REKAPAGER_ROW_VALUES', RowValuesFunction::class);\n"})})]})]}),"\n",(0,a.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"use Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\EntityRepository;\nuse Rekalogika\\Rekapager\\Doctrine\\ORM\\QueryBuilderAdapter;\nuse Rekalogika\\Rekapager\\Keyset\\KeysetPageable;\nuse Rekalogika\\Rekapager\\Offset\\OffsetPageable;\n\n/** @var EntityRepository $postRepository */\n\n$queryBuilder = $postRepository\n    ->createQueryBuilder('p')\n    ->where('p.group = :group')\n    ->setParameter('group', $group)\n    ->addOrderBy('p.date', 'DESC') // a date field that accepts DateTime\n    ->addOrderBy('p.title', 'ASC')\n    ->addOrderBy('p.id', 'ASC');\n\n// highlight-start\n$adapter = new QueryBuilderAdapter(\n    queryBuilder: $queryBuilder,\n    typeMapping: [\n        'p.date' => Types::DATE_MUTABLE // the type of the date field\n    ],\n    indexBy: 'id' // optional\n);\n// highlight-end\n\n$pageable = new KeysetPageable($adapter);\n// or\n$pageable = new OffsetPageable($adapter);\n"})}),"\n",(0,a.jsx)(r.admonition,{type:"info",children:(0,a.jsx)(r.p,{children:"If you don't provide a type mapping, the adapter will try to look it up from\nDoctrine's class metadata. If it fails, it will use heuristics to detect the\ntype for some common objects."})}),"\n",(0,a.jsx)(r.admonition,{type:"caution",children:(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"QueryBuilderAdapter"})," does not support QueryBuilder's ",(0,a.jsx)(r.code,{children:"indexBy"})," (the third\nparameter of ",(0,a.jsx)(r.code,{children:"from()"}),", or the second parameter of a repository's\n",(0,a.jsx)(r.code,{children:"createQueryBuilder()"}),"). If you need the feature, use the ",(0,a.jsx)(r.code,{children:"indexBy"})," parameter of\n",(0,a.jsx)(r.code,{children:"QueryBuilderAdapter"})," as the above example."]})}),"\n",(0,a.jsx)(r.h2,{id:"notes",children:"Notes"}),"\n",(0,a.jsx)(r.p,{children:"With keyset pagination, there are additional prerequisites:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["The underlying ",(0,a.jsx)(r.code,{children:"QueryBuilder"})," object must have a sort order. Be sure to call\n",(0,a.jsx)(r.code,{children:"orderBy()"})," or ",(0,a.jsx)(r.code,{children:"addOrderBy()"})," on the query builder before passing it to the\nadapter."]}),"\n",(0,a.jsxs)(r.li,{children:["If a field in a sort order uses a non-scalar type, you should provide a\n",(0,a.jsx)(r.code,{children:"typeMapping"})," option. The adapter will use it in the ",(0,a.jsx)(r.code,{children:"setParameter()"})," method\nof the ",(0,a.jsx)(r.code,{children:"QueryBuilder"}),". The example above shows how to provide a type mapping\nfor a date field."]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"limitations",children:"Limitations"}),"\n",(0,a.jsx)(r.p,{children:"One-to-many and many-to-many joins are not supported. Many-to-one joins are OK."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"// supported because a post has only one author\n$queryBuilder\n    ->from(Post::class, 'p')\n    ->leftJoin('p.author', 'a')\n    ->select('p');\n\n// not supported because a post has many comments\n$queryBuilder\n    ->from(Post::class, 'p')\n    ->leftJoin('p.comments', 'c')\n    ->select('p');\n"})}),"\n",(0,a.jsx)(r.p,{children:"If you have an entity with a one-to-many relationship, you can usually omit the\njoin and Doctrine will fetch the related entities lazily."})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9365:(e,r,t)=>{t.d(r,{A:()=>i});t(6540);var n=t(4164);const a={tabItem:"tabItem_Ymn6"};var o=t(4848);function i(e){let{children:r,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(a.tabItem,i),hidden:t,children:r})}},1470:(e,r,t)=>{t.d(r,{A:()=>k});var n=t(6540),a=t(4164),o=t(3104),i=t(6347),s=t(205),l=t(7485),u=t(1682),d=t(679);function c(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return c(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:a}}=e;return{value:r,label:t,attributes:n,default:a}}))}(t);return function(e){const r=(0,u.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function h(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:t}=e;const a=(0,i.W6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(a.location.search);r.set(o,e),a.replace({...a.location,search:r.toString()})}),[o,a])]}function f(e){const{defaultValue:r,queryString:t=!1,groupId:a}=e,o=p(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:o}))),[u,c]=m({queryString:t,groupId:a}),[f,y]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[a,o]=(0,d.Dv)(t);return[a,(0,n.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),g=(()=>{const e=u??f;return h({value:e,tabValues:o})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),y(e)}),[c,y,o]),tabValues:o}}var y=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function x(e){let{className:r,block:t,selectedValue:n,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),d=e=>{const r=e.currentTarget,t=l.indexOf(r),a=s[t].value;a!==n&&(u(r),i(a))},c=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;r=l[t]??l[l.length-1];break}}r?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},r),children:s.map((e=>{let{value:r,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>l.push(e),onKeyDown:c,onClick:d,...o,className:(0,a.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function v(e){let{lazy:r,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===o));return e?(0,n.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==o})))})}function j(e){const r=f(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,b.jsx)(x,{...r,...e}),(0,b.jsx)(v,{...r,...e})]})}function k(e){const r=(0,y.A)();return(0,b.jsx)(j,{...e,children:c(e.children)},String(r))}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>s});var n=t(6540);const a={},o=n.createContext(a);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);