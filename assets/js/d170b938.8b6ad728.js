"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3825],{1470:(e,n,t)=>{t.d(n,{A:()=>w});var i=t(6540),r=t(4164),o=t(3104),s=t(6347),a=t(205),l=t(7485),u=t(1682),c=t(679);function p(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return p(e).map((({props:{value:e,label:n,attributes:t,default:i}})=>({value:e,label:n,attributes:t,default:i})))}(t);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function b({value:e,tabValues:n}){return n.some((n=>n.value===e))}function h({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=d(e),[s,l]=(0,i.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!b({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[u,p]=h({queryString:t,groupId:r}),[f,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,c.Dv)(n);return[t,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),v=(()=>{const e=u??f;return b({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{v&&l(v)}),[v]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!b({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),m(e)}),[p,m,o]),tabValues:o}}var m=t(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function y({className:e,block:n,selectedValue:t,selectValue:i,tabValues:s}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),u=e=>{const n=e.currentTarget,r=a.indexOf(n),o=s[r].value;o!==t&&(l(n),i(o))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:i})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{a.push(e)},onKeyDown:c,onClick:u,...i,className:(0,r.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function $({lazy:e,children:n,selectedValue:t}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===t));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function k(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(y,{...n,...e}),(0,g.jsx)($,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,g.jsx)(k,{...e,children:p(e.children)},String(n))}},8052:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"api-lite/basic-endpoints/objects","title":"Objects Used in the Examples","description":"","source":"@site/docs/api-lite/52-basic-endpoints/41-objects.md","sourceDirName":"api-lite/52-basic-endpoints","slug":"/api-lite/basic-endpoints/objects","permalink":"/api-lite/basic-endpoints/objects","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/api-lite/52-basic-endpoints/41-objects.md","tags":[],"version":"current","sidebarPosition":41,"frontMatter":{"title":"Objects Used in the Examples"},"sidebar":"docs","previous":{"title":"Use Cases: Basic Endpoints","permalink":"/api-lite/basic-endpoints/"},"next":{"title":"GET Collection Endpoint","permalink":"/api-lite/basic-endpoints/get-collection"}}');var r=t(4848),o=t(8453),s=t(1470),a=t(9365);const l={title:"Objects Used in the Examples"},u=void 0,c={},p=[];function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(s.A,{queryString:"tab",groupId:"api",children:[(0,r.jsx)(a.A,{value:"book",label:"Book",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="src/Entity/Book.php"',children:"namespace App\\Entity;\n\nuse App\\Repository\\BookRepository;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Bridge\\Doctrine\\Types\\UuidType;\nuse Symfony\\Component\\Uid\\Uuid;\n\n#[ORM\\Entity(repositoryClass: BookRepository::class)]\nclass Book extends \\stdClass\n{\n    #[ORM\\Id]\n    #[ORM\\Column(type: UuidType::NAME, unique: true, nullable: false)]\n    private Uuid $id;\n\n    #[ORM\\Column]\n    private ?string $title = null;\n\n    #[ORM\\Column(type: Types::TEXT)]\n    private ?string $description = null;\n\n    #[ORM\\Column(type: Types::DATETIME_IMMUTABLE, nullable: true)]\n    private ?\\DateTimeInterface $lastChecked = null;\n\n    /**\n     * @var Collection<array-key,Review>\n     */\n    #[ORM\\OneToMany(\n        targetEntity: Review::class,\n        mappedBy: 'book',\n        cascade: ['persist', 'remove'],\n        orphanRemoval: true,\n        fetch: 'EXTRA_LAZY',\n        indexBy: 'id',\n    )]\n    private Collection $reviews;\n\n    public function __construct()\n    {\n        $this->id = Uuid::v7();\n        $this->reviews = new ArrayCollection();\n    }\n\n    /**\n     * We want to check our books' conditions every now and then.\n     */\n    public function check(): void\n    {\n        $this->lastChecked = new \\DateTimeImmutable();\n    }\n\n    public function getId(): Uuid\n    {\n        return $this->id;\n    }\n\n    public function getTitle(): ?string\n    {\n        return $this->title;\n    }\n\n    public function setTitle(?string $title): self\n    {\n        $this->title = $title;\n\n        return $this;\n    }\n\n    public function getDescription(): ?string\n    {\n        return $this->description;\n    }\n\n    public function setDescription(?string $description): self\n    {\n        $this->description = $description;\n\n        return $this;\n    }\n\n    /**\n     * @return Collection<array-key,Review>\n     */\n    public function getReviews(): Collection\n    {\n        return $this->reviews;\n    }\n\n    public function addReview(Review $review): self\n    {\n        if (!$this->reviews->contains($review)) {\n            $this->reviews[] = $review;\n            $review->setBook($this);\n        }\n\n        return $this;\n    }\n\n    public function removeReview(Review $review): self\n    {\n        if ($this->reviews->removeElement($review)) {\n            // set the owning side to null (unless already changed)\n            if ($review->getBook() === $this) {\n                $review->setBook(null);\n            }\n        }\n\n        return $this;\n    }\n\n    public function getLastChecked(): ?\\DateTimeInterface\n    {\n        return $this->lastChecked;\n    }\n}\n"})})}),(0,r.jsx)(a.A,{value:"review",label:"Review",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="src/Entity/Review.php"',children:"namespace App\\Entity;\n\nuse App\\Repository\\ReviewRepository;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Bridge\\Doctrine\\Types\\UuidType;\nuse Symfony\\Component\\Uid\\Uuid;\n\n#[ORM\\Entity(repositoryClass: ReviewRepository::class)]\nclass Review\n{\n    #[ORM\\Id]\n    #[ORM\\Column(type: UuidType::NAME, unique: true, nullable: false)]\n    private Uuid $id;\n\n    /**\n     * @var int<1,5>\n     */\n    #[ORM\\Column]\n    private int $rating = 3;\n\n    #[ORM\\Column]\n    private ?string $body = null;\n\n    #[ORM\\ManyToOne(\n        targetEntity: Book::class,\n        inversedBy: 'reviews',\n    )]\n    private ?Book $book = null;\n\n    public function __construct()\n    {\n        $this->id = Uuid::v7();\n    }\n\n\n    public function getId(): Uuid\n    {\n        return $this->id;\n    }\n\n    public function getBook(): ?Book\n    {\n        return $this->book;\n    }\n\n    public function setBook(?Book $book): self\n    {\n        $this->book = $book;\n\n        return $this;\n    }\n\n    public function getBody(): ?string\n    {\n        return $this->body;\n    }\n\n    public function setBody(?string $body): self\n    {\n        $this->body = $body;\n\n        return $this;\n    }\n\n    /**\n     * @return int<1,5>\n     */\n    public function getRating(): int\n    {\n        return $this->rating;\n    }\n\n    /**\n     * @param int<1,5> $rating\n     */\n    public function setRating(int $rating): self\n    {\n        $this->rating = $rating;\n\n        return $this;\n    }\n}\n"})})}),(0,r.jsx)(a.A,{value:"bookdto",label:"BookDto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="src/ApiResource/Admin/BookDto.php"',children:"namespace App\\ApiResource\\Admin;\n\nuse Rekalogika\\Mapper\\CollectionInterface;\nuse Symfony\\Component\\Uid\\Uuid;\n\nclass BookDto\n{\n    public ?Uuid $id = null;\n    public ?string $title = null;\n    public ?string $description = null;\n    public ?\\DateTimeInterface $lastChecked = null;\n\n    /**\n     * @var ?CollectionInterface<int,ReviewDto>\n     */\n    public ?CollectionInterface $reviews = null;\n}\n"})})}),(0,r.jsx)(a.A,{value:"reviewdto",label:"ReviewDto",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="src/ApiResource/Admin/ReviewDto.php"',children:"namespace App\\ApiResource\\Admin;\n\nuse Symfony\\Component\\Uid\\Uuid;\n\nclass ReviewDto\n{\n    public ?Uuid $id = null;\n    public ?string $body = null;\n\n    /**\n     * @var int<1,5>|null\n     */\n    public ?int $rating = null;\n    public ?BookDto $book = null;\n}\n"})})})]})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var i=t(4164);const r={tabItem:"tabItem_Ymn6"};var o=t(4848);function s({children:e,hidden:n,className:t}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,t),hidden:n,children:e})}}}]);