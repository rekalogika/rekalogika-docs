"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[8674],{9439:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var t=o(5893),i=o(1151);const r={title:"Iterating Large Collections"},a=void 0,l={id:"collections/behaviors/iterator",title:"Iterating Large Collections",description:"Problem",source:"@site/docs/collections/03-behaviors/02-iterator.md",sourceDirName:"collections/03-behaviors",slug:"/collections/behaviors/iterator",permalink:"/collections/behaviors/iterator",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/collections/03-behaviors/02-iterator.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Iterating Large Collections"},sidebar:"docs",previous:{title:"Potential Out-of-Memory Handling",permalink:"/collections/behaviors/oom"},next:{title:"Slow Counting",permalink:"/collections/behaviors/counting"}},c={},s=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.code,{children:"foreach()"})," directly on a large collection will trigger full\ninitialization of the collection, and can cause an out-of-memory error."]}),"\n",(0,t.jsxs)(n.p,{children:["Doctrine ",(0,t.jsx)(n.code,{children:"Collection"})," does provide the ",(0,t.jsx)(n.code,{children:"slice()"})," method to paginate the\ncollection. However it uses offset pagination that has these drawbacks:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"With a large collection, it will become slower and slower as you go further\naway from the start."}),"\n",(0,t.jsx)(n.li,{children:"If the underlying data changes while you are iterating it, the entire set will\ndrift, and the iteration is going to miss or duplicate some records."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"foreach()"}),"-ing a collection from this package is subject to ",(0,t.jsx)(n.code,{children:"$softLimit"})," and\n",(0,t.jsx)(n.code,{children:"$hardLimit"})," checks as described in the ",(0,t.jsx)(n.a,{href:"/collections/behaviors/oom",children:"Potential Out-of-Memory\nHandling"})," section. It will stop you before it becomes an\nout-of-memory problem."]}),"\n",(0,t.jsxs)(n.p,{children:["All of our classes implement higher-level ",(0,t.jsx)(n.code,{children:"PageableInterface"})," from our\n",(0,t.jsx)(n.code,{children:"rekalogika/rekapager-contracts"})," which add keyset pagination feature to the\nunderlying data. Unlike offset pagination, keyset pagination does not have the\naforementioned drawbacks."]}),"\n",(0,t.jsx)(n.p,{children:"To iterate over a large collection, you can simply do this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Doctrine\\ORM\\EntityManagerInterface;\nuse Rekalogika\\Rekapager\\PageableInterface;\n\n/** @var EntityManagerInterface $entityManager */\n// $collection is any collection object from this package\n\nforeach ($collection->withItemsPerPage(1000)->getPages() as $page) {\n    foreach ($page as $entity) {\n        // Do something with the $entity\n    }\n\n    // Do something after each page here\n    // With Doctrine, you'd usually want to flush() and clear() here\n    $entityManager->flush(); // if required\n    $entitymanager->clear();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"There is no need to create ad-hoc queries every time you need to perform safe\niteration over a large collection."}),"\n",(0,t.jsxs)(n.p,{children:["For more information about batch processing using ",(0,t.jsx)(n.code,{children:"PageableInterface"}),", see\n",(0,t.jsx)(n.a,{href:"/rekapager/batch-processing",children:"Batch Processing"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>a});var t=o(7294);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);