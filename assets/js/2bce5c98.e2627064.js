"use strict";(self.webpackChunkrekalogika_docs=self.webpackChunkrekalogika_docs||[]).push([[3496],{8453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>o});var n=t(6540);const a={},s=n.createContext(a);function c(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(s.Provider,{value:r},e.children)}},9647:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"analytics/user-interface/chart-generator","title":"Chart Generator","description":"To render the query result as a chart, you can use the ChartGenerator service.","source":"@site/docs/analytics/11-user-interface/02-chart-generator.md","sourceDirName":"analytics/11-user-interface","slug":"/analytics/user-interface/chart-generator","permalink":"/analytics/user-interface/chart-generator","draft":false,"unlisted":false,"editUrl":"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/analytics/11-user-interface/02-chart-generator.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Chart Generator"},"sidebar":"docs","previous":{"title":"Table Renderer","permalink":"/analytics/user-interface/table-renderer"},"next":{"title":"Spreadsheet Renderer","permalink":"/analytics/user-interface/spreadsheet-renderer"}}');var a=t(4848),s=t(8453);const c={title:"Chart Generator"},o=void 0,i={},l=[];function u(e){const r={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:["To render the query result as a chart, you can use the ",(0,a.jsx)(r.code,{children:"ChartGenerator"})," service.\nIt returns a ",(0,a.jsx)(r.code,{children:"Chart"})," instance from the ",(0,a.jsx)(r.code,{children:"symfony/ux-chartjs"})," package."]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"ChartGenerator"})," is meant to be a simple service that tries to automatically\nbuild a chart from a query result without requiring too much configuration.\nWhile it is convenient, it is also not very flexible."]}),"\n",(0,a.jsx)(r.p,{children:"Example:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-php",children:"use Rekalogika\\Analytics\\Contracts\\SummaryManager;\nuse Rekalogika\\Analytics\\Frontend\\Chart\\ChartGenerator;\nuse Rekalogika\\Analytics\\Frontend\\Chart\\ChartType;\n\n/** @var SummaryManager $summaryManager */\n/** @var ChartGenerator $chartGenerator */\n\n$cube = $summaryManager\n    ->createQuery()\n    // ...\n    ->getResult()\n    ->getCube();\n\n$chart = $chartGenerator->createChart(\n    cube: $cube,\n    dimensions: ['time.month'],\n    measures: ['price'],\n    chartType: ChartType::Auto,\n);\n"})}),"\n",(0,a.jsxs)(r.p,{children:["Then, in your Twig template, you can render the chart using the ",(0,a.jsx)(r.code,{children:"render_chart()"}),"\nfunction provided by the ",(0,a.jsx)(r.code,{children:"symfony/ux-chartjs"})," package:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-twig",children:"{{ render_chart(chart) }}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);